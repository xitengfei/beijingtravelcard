{"version":3,"sources":["assets/image/yikatong-logo-sm.png","assets/image/location-icon.svg","utils/ScenicsFilter.js","api/api.js","api/server.js","store/home/actions.ts","store/home/reducer.ts","utils/genReducer.js","store/index.ts","components/SearchModal/index.tsx","pages/Home/Menu/index.tsx","pages/Home/Nav/index.tsx","components/BtnCheckGroup/index.tsx","pages/Home/SideBar/index.tsx","components/ScenicList/index.tsx","pages/Home/index.tsx","pages/Detail/index.tsx","components/test/DemoListView.js","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ScenicsFilter","keywordFilter","items","keyword","filter","item","name","indexOf","area","areaFilter","areas","length","momentFilter","start","end","_item$periods","periods","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","period","value","_this","isDateOverLaps","err","return","filterItems","filters","newItems","slice","hideUnavailable","link","startDate","endDate","source","t1","moment","t2","isSameOrBefore","isSameOrAfter","api","version","this","axios","concat","result","method","url","params","Promise","resolve","reject","_option","Object","objectSpread","baseURL","timeout","data","headers","withCredentials","validateStatus","status","request","then","res","JSON","parse","error","response","setLoading","isLoading","type","payload","home_actions","setVersion","fetchAreas","forceUpdate","arguments","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","_getState","homeStore","newAreas","wrap","_context","prev","abrupt","API","getAreas","sent","stop","_x","_x2","apply","fetchScenics","_ref2","_callee2","_getState$homeStore","scenics","scenicsList","_context2","getScenics","map","scenic","index","id","dates","i","push","_x3","_x4","applyFilters","setTimeout","filteredScenics","genReducer","initState","handlers","state","action","handler","title","_ACTION_HANDLERS","defineProperty","_ref3","assign","_ref4","_ref5","_ref6","_ref7","loggerMiddleware","createLogger","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","SearchModal","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","autoFocusInst","handleSearch","setState","onSearch","nextProps","visible","console","log","focus","_this$props","placeholder","onCancel","react_default","createElement","modal_default","className","transparent","maskClosable","footer","search_bar_default","defaultValue","ref","showCancelButton","onSubmit","React","Component","Item","popover_default","versions","key","Menu","_useState","useState","_useState2","slicedToArray","setVisible","overlay","isActive","activeKey","style","color","align","overflow","adjustY","adjustX","onVisibleChange","onSelect","node","height","padding","marginRight","display","alignItems","icon_default","_default","searchVisible","handleCancel","handleSearchClick","handleMenuSelect","onRightClick","_this$state","nav_bar_default","mode","icon","src","Logo","alt","rightContent","Home_Menu","onClick","src_components_SearchModal","BtnCheckGroup","options","checkedCodes","onChange","button_default","inline","size","option","code","isChecked","includes","check","nextCheckedCodes","handleCheck","nowTimeStamp","Date","now","CheckboxItem","onOpenChange","open","handleAreaChange","checkedAreaIds","handleOk","handleReset","renderContent","_this$state2","docWidth","document","documentElement","clientWidth","width","Math","min","src_components_BtnCheckGroup","list_default","backgroundColor","date_picker_default","extra","date","arrow","checked","e","target","children","drawer_default","minHeight","clientHeight","enableDragHandle","contentStyle","textAlign","sidebar","position","ScenicList","join","isOver","locationLink","imgUrl","href","rel","locationIcon","price","dateTxt","notice","backgroundImage","PAGE_SIZE","MyBody","react","Home","lv","sideBarRef","initLoad","openSideBar","current","actions","handleSetVersion","onEndReached","pageIndex","hasMore","renderRow","rowData","sectionId","rowId","src_components_ScenicList","dataSource","list_view_default","DataSource","rowHasChanged","row1","row2","offsetTop","dom","ReactDOM","findDOMNode","parentNode","allScenics","_this2","scenicsToShow","renderData","cloneWithRows","Home_SideBar_default","Home_Nav_default","pageSize","onEndReachedThreshold","renderBodyComponent","onScroll","renderFooter","activity_indicator_default","toast","animating","connect","ownProps","_state$homeStore","bindActionCreators","homeActions","Detail","handleLeftClick","history","onLeftClick","find","NUM_ROWS","genData","pIndex","dataBlob","ii","MySectionBodyWrapper","Demo","event","rData","_this3","el","useBodyScroll","renderHeader","renderSectionBodyWrapper","sectionID","DemoListView_MySectionBodyWrapper","RouteConfig","react_router_dom","react_router","path","exact","component","ListView","App","es","router_RouteConfig","Boolean","window","location","hostname","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4ba4d48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yikatong-logo-sm.e302ab8c.png\";","module.exports = __webpack_public_path__ + \"static/media/location-icon.2c1ce28d.svg\";","import moment from 'moment';\n\nclass ScenicsFilter{\n    isDateOverLaps(startDate, endDate, source){\n        const format = 'YYYY.M.D';\n        const t1 = moment(source[0], format);\n        const t2 = moment(source[1], format);\n \n        if(t1.isSameOrBefore(endDate) && t2.isSameOrAfter(startDate)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    keywordFilter = (items, keyword) => {\n        return items.filter(item => { \n            return item.name.indexOf(keyword) > -1 || item.area.indexOf(keyword) > -1;\n        })\n    };\n\n    areaFilter = (items, areas) => {\n        if(!areas.length) return items;\n        \n        return items.filter((item)=>{\n            return areas.indexOf(item.area) > -1\n        })\n    };\n\n    momentFilter = (items, start, end) => {\n        if(!start && !end) return items;\n\n        return items.filter(item => {\n            let {periods = []} = item;\n            if(!periods.length) return true;\n\n            let match = false;\n            for(let period of periods){\n                if(this.isDateOverLaps(start, end, period)){\n                    match = true;\n                    break;\n                }\n            }\n            return match;\n        });\n    };\n\n    filterItems = (items, filters) => {\n        let newItems = items.slice();\n\n        if(filters.hideUnavailable){\n            newItems = newItems.filter(item => item.link);\n        }\n\n        if(filters.keyword){\n            newItems = this.keywordFilter(newItems, filters.keyword);\n        }\n        \n        if(filters.areas && filters.areas.length){\n            newItems = this.areaFilter(newItems, filters.areas);\n        }\n\n        if(filters.start && filters.end){\n            newItems = this.momentFilter(newItems, filters.start, filters.end);\n        }\n\n        return newItems;\n    };\n}\n\nexport default ScenicsFilter","import Server from './server';\n\nclass API extends Server {\n    async getAreas(version = '2020') {\n        try {\n            const result = await this.axios('get', `/json/${version}/areas.json`);\n            return result;\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    async getScenics(version = '2020') {\n        try {\n            const result = await this.axios('get', `/json/${version}/scenics.json`);\n            return result;\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport default new API();","import axios from 'axios';\n/**\n * 主要params参数\n * @params method {string} 方法名\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\n * @params timeout {number} 请求超时时间 默认 30000\n * @params params {object}  get方式传参key值\n * @params headers {string} 指定请求头信息\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\n * @return {Promise}\n * 其他更多拓展参看axios文档后 自行拓展\n * 注意：params中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在params中带入\n*/\n\nexport default class Server {\n    axios(method, url, params) {\n        return new Promise((resolve, reject) => {\n            if (typeof params !== 'object') params = {};\n            let _option = params;\n            _option = {\n                method,\n                url,\n                baseURL: '/',\n                timeout: 30000,\n                params: null,\n                data: null,\n                headers: null,\n                withCredentials: true, //是否携带cookies发起请求\n                validateStatus: (status) => {\n                    return status >= 200 && status < 300;\n                },\n                ...params,\n            }\n            axios.request(_option).then(res => {\n                resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\n            }, error => {\n                if (error.response) {\n                    reject(error.response.data)\n                } else {\n                    reject(error)\n                }\n            })\n        })\n    }\n}\n\n\n","import * as Redux from 'redux';\nimport ScenicsFilter from '@/utils/ScenicsFilter';\nimport API from '@/api/api';\n\nimport Home from './type';\nimport {RootState} from '@/store/';\nimport Filters from '@/models/Filters';\nimport Scenic from '@/models/Scenic';\n\n// ===============================\n// Action Type\n// ===============================\nexport const HOME_SET_YIKATONG_VERSION = 'HOME_SET_YIKATONG_VERSION'\nexport const HOME_SET_YIKATONG_SCENICS = 'HOME_SET_YIKATONG_SCENICS'\nexport const HOME_SET_YIKATONG_AREAS = 'HOME_SET_YIKATONG_AREAS'\nexport const HOME_SET_FILTERING_STATE = 'HOME_SET_FILTERING_STATE'\nexport const HOME_SET_FILTERED_SCENICS = 'HOME_SET_FILTERED_SCENICS'\n\n\n// ===============================\n// Action Creator\n// ===============================\nexport const setVersion = (version: string) => ({\n    type: HOME_SET_YIKATONG_VERSION,\n    payload: version\n})\n\nexport const fetchAreas = function(forceUpdate = false){\n    return async (dispatch: Redux.Dispatch, getState: () => RootState) => {\n        const {homeStore} = getState();\n        const {areas, version}: Home = homeStore;\n        if(areas.length && !forceUpdate) return homeStore.areas;\n\n        const newAreas = await API.getAreas(version);\n        return dispatch({\n            type: HOME_SET_YIKATONG_AREAS,\n            payload: newAreas\n        })\n    }\n}\n\nexport const fetchScenics = function(forceUpdate = false){\n    return async (dispatch: Redux.Dispatch, getState: () => RootState) => {\n        const {scenics, version} = getState().homeStore;\n        if(scenics.length && !forceUpdate) return scenics;\n\n        let scenicsList = await API.getScenics(version);\n        scenicsList = scenicsList.map((scenic: Scenic, index: number) => {\n            scenic.id = index + 1 + '';\n            scenic.periods = [];\n            scenic.dates = scenic.dates || [];\n            const dates: Array<string> = scenic.dates;\n\n            let i = 0;\n            while(i < dates.length){\n                if(dates[i] && dates[i+1]){\n                    scenic.periods.push([dates[i], dates[i+1]]);\n                }\n                i += 2;\n            }\n            return scenic;\n        });\n\n        return dispatch({\n            type: HOME_SET_YIKATONG_SCENICS,\n            payload: scenicsList\n        })\n    }\n}\n\nexport const setLoading = (isLoading: boolean) => ({\n    type: HOME_SET_FILTERING_STATE,\n    payload: isLoading,\n})\n\n/**\n * Apply Filters on scenics\n * @param filters \n */\nexport const applyFilters = (filters: Filters) => (dispatch: Redux.Dispatch, getState: () => RootState) =>  {\n    const {\n        homeStore: {\n            scenics\n        }\n    } = getState();\n\n    dispatch(setLoading(true));\n\n    setTimeout(()=>{\n        // start filtering\n        const filterTool = new ScenicsFilter();\n        const filteredScenics: Array<Scenic> = filterTool.filterItems(scenics, filters)\n\n        dispatch({\n            type: HOME_SET_FILTERED_SCENICS,\n            payload: filteredScenics\n        })\n\n        dispatch(setLoading(false));\n    }, 1000)\n}\n\n/**\n * export all action creators\n */\nexport default {\n    setVersion,\n    fetchAreas,\n    fetchScenics,\n    setLoading,\n    applyFilters,\n}\n\n// ===============================\n// Action Handlers\n// ===============================\ntype Action = {type: string, payload: any};\nexport const ACTION_HANDLERS = {\n    [HOME_SET_YIKATONG_VERSION]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {version: payload});\n    },\n    [HOME_SET_YIKATONG_SCENICS]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {scenics: payload});\n    },\n    [HOME_SET_YIKATONG_AREAS]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {areas: payload});\n    },\n    [HOME_SET_FILTERED_SCENICS]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {filteredScenics: payload});\n    },\n    [HOME_SET_FILTERING_STATE]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {isLoading: payload});\n    }\n}","import genReducer from '@/utils/genReducer';\nimport Home from './type';\nimport {ACTION_HANDLERS} from './actions';\n\nconst initState: Home = {\n    title:'',\n    areas:[],\n    scenics:[],\n    filteredScenics:[],\n    isLoading: false,\n    version: '2020'\n};\n\nexport default genReducer(initState, ACTION_HANDLERS)","export default function genReducer(initState, handlers){\n    return function reducer(state = initState, action){\n        const handler = handlers[action.type];\n        return handler ? handler(state, action) : state\n    }\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport homeStore from './home/reducer';\nimport Home from './home/type';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n  combineReducers({homeStore}),\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\n);\n\nexport interface RootState{\n    homeStore: Home\n};","import React from 'react';\nimport {Modal, SearchBar} from 'antd-mobile';\nimport './index.less';\n\ninterface Props{\n    keyword: string,\n    visible: boolean,\n    placeholder?: string,\n    onSearch: (keyword: string) => void,\n    onCancel: () => void,\n}\n\ninterface State{\n    keyword: string\n}\n\nclass SearchModal extends React.Component<Props, State>{\n    autoFocusInst: any;\n\n    constructor(props: Props){\n        super(props);\n\n        this.state = {\n            keyword: props.keyword,\n        };\n    }\n\n    componentDidMount() {\n        // this.autoFocusInst && this.autoFocusInst.focus();\n    }\n\n    componentWillReceiveProps(nextProps: Props){\n        if(nextProps.visible && !this.props.visible){\n            console.log('kk', this.autoFocusInst);\n            this.autoFocusInst && this.autoFocusInst.focus();\n        }\n\n        this.setState({\n            keyword: nextProps.keyword\n        });\n    }\n\n    handleSearch = (keyword: string) => {\n        this.setState({keyword});\n        this.props.onSearch(keyword);\n    }\n\n    render(){\n        const {visible, placeholder, onCancel} = this.props;\n        \n        return(\n            <Modal\n                className=\"search-modal\"\n                visible={visible}\n                transparent\n                maskClosable={false}\n                footer={[]}\n            >\n                <SearchBar \n                    placeholder={placeholder}\n                    defaultValue={this.props.keyword}\n                    ref={ref => ref && ref.focus()}\n                    showCancelButton={true}\n                    onSubmit={this.handleSearch}\n                    onCancel={onCancel}\n                />\n            </Modal>\n        )\n    }\n}\n\nexport default SearchModal;\n","import React, {useState} from 'react';\nimport { Popover, Icon } from 'antd-mobile';\n\nconst Item = Popover.Item;\nconst versions = [\n    // {key: '2019', name: '2019版景区目录'},\n    {key: '2020', name: '2020普通版景区目录'},\n    // {key: '2020-union', name: '2020联合卡景区目录'},\n]\n\ninterface Props{\n    activeKey: string,\n    onSelect: (key: string) => void\n}\n\nconst Menu = function(props: Props){\n\n    const [visible, setVisible] = useState(false);\n\n    const overlay = versions.map(item => {\n        const isActive = item.key === props.activeKey;\n        return (\n            <Item \n                key={item.key}\n                style={{color: isActive ? 'red':'#666'}}\n            >{item.name}</Item>\n        )\n    });\n\n    const handleSelect = (node: any) => {\n        if(node.key !== props.activeKey){\n            props.onSelect(node.key);\n            setVisible(false);\n        }\n    }\n\n    return (\n        <Popover \n            // mask\n            visible={visible}\n            overlay={overlay}\n            align={{\n              overflow: { adjustY: 0, adjustX: 0 },\n            }}\n            onVisibleChange={setVisible}\n            onSelect={handleSelect}\n          >\n            <div \n                style={{\n                    height: '100%',\n                    padding: '0 15px',\n                    marginRight: '-15px',\n                    display: 'flex',\n                    alignItems: 'center',\n                }}\n            >\n                <Icon type=\"ellipsis\" />\n            </div>\n        </Popover>\n    )\n}\n\nexport default Menu;\n","import React from 'react';\nimport { NavBar, Icon } from 'antd-mobile';\nimport SearchModal from '@/components/SearchModal';\nimport Menu from '../Menu';\nimport Logo from '@/assets/image/yikatong-logo-sm.png';\nimport \"./index.less\";\n\ninterface Props{\n    title: string,\n    version: string,\n    onRightClick(): void,\n    onSearch(keyword: string): void,\n    setVersion(version: string): void,\n}\n\ninterface State{\n    searchVisible: boolean,\n    keyword: string\n}\n\nconst PlaceHolder = '请输入关键字搜索景区';\n\nexport default class extends React.Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n\n        this.state = {\n            searchVisible: false,\n            keyword: '',\n        };\n    }\n\n    handleSearch = (keyword: string) => {\n        this.props.onSearch(keyword);\n        this.setState({searchVisible: false, keyword});\n    }\n\n    handleCancel = () => {\n        this.setState({searchVisible: false});\n    }\n\n    handleSearchClick = () => {\n        this.setState({searchVisible: true});\n    }\n\n    handleMenuSelect = (key: string) => {\n        console.log('change to version: ', key);\n        this.props.setVersion(key);\n    }\n\n    render(){\n        const {title, version, onRightClick} = this.props;\n        const {searchVisible, keyword} = this.state;\n\n        return(\n            <div\n                className=\"headerNav\"\n            >\n                <NavBar\n                    mode=\"light\"\n                    icon={<img className=\"brand\" src={Logo} alt=\"logo\" />}\n                    rightContent={\n                        <Menu \n                            activeKey={version}\n                            onSelect={this.handleMenuSelect}\n                        />\n                    }\n                >{title}</NavBar>\n\n                <div className=\"search-bar\">\n                    <div className=\"input-container\" onClick={this.handleSearchClick}>\n                        <div className=\"input\">\n                            <Icon type=\"search\" />\n                            {keyword ? \n                                <span>{keyword}</span> : \n                                <span className=\"placeholder\">{PlaceHolder}</span>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"filter-trigger\" onClick={onRightClick}>\n                        <span>筛选</span>\n                        <span className=\"iconfont icon-filter\"></span>\n                    </div>\n                </div>\n\n                <SearchModal \n                    visible={searchVisible}\n                    keyword={keyword}\n                    onSearch={this.handleSearch}\n                    onCancel={this.handleCancel}\n                    placeholder={PlaceHolder}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Button} from 'antd-mobile';\nimport './index.less';\n\ninterface Option{\n    code: string,\n    name: string\n}\n\ninterface Props{\n    options: Array<Option>,\n    checkedCodes: Array<string>,\n    onChange: (checkedCodes: Array<string>) => void\n}\n\nconst BtnCheckGroup = function(props: Props){\n    const {options, checkedCodes, onChange} = props;\n\n    const handleCheck = (code: string, check: boolean) => {\n        let nextCheckedCodes = checkedCodes.slice();\n        \n        if(check){\n            nextCheckedCodes.push(code);\n        }else{\n            nextCheckedCodes = nextCheckedCodes.filter(item => code !== item);\n        }\n\n        onChange(nextCheckedCodes);\n    };\n\n    return(\n        <div className=\"btn-check-group\">\n            <Button \n                inline\n                key={'nolimit'}\n                type={checkedCodes.length ? 'ghost':'primary'}\n                size=\"small\"\n                onClick={() => onChange([])}\n            >\n                不限\n            </Button>\n\n            {options.map((option: Option) => {\n                const {code, name} = option;\n                const isChecked = checkedCodes.includes(code);\n\n                return (\n                    <Button \n                        inline\n                        key={code}\n                        type={isChecked ? 'primary':'ghost'}\n                        size=\"small\"\n                        className={isChecked ? 'checked':''}\n                        onClick={() => {\n                            const isToCheck = isChecked ? false : true;\n                            handleCheck(code, isToCheck);\n                        }}\n                    >\n                        {name}\n                    </Button>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default BtnCheckGroup;\n","import React, { ReactNode } from 'react';\nimport { Drawer, Button, DatePicker, List, Checkbox } from 'antd-mobile';\nimport BtnCheckGroup from '@/components/BtnCheckGroup';\nimport Filters from '@/models/Filters';\nimport \"./index.less\";\n\ninterface Props{\n    children: ReactNode,\n    title: string,\n    areas: Array<string>,\n    ref: React.RefObject<any>,\n    applyFilters: (filters: Filters) => void\n}\ninterface State{\n    open: boolean,\n    checkedAreaIds: Array<string>,\n    startDate: Date | undefined,\n    endDate: Date | undefined,\n    hideUnavailable: boolean,\n}\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\n// GMT is not currently observed in the UK. So use UTC now.\n// const utcNow = new Date(now.getTime() + (now.getTimezoneOffset() * 60000));\n\nconst {CheckboxItem} = Checkbox;\n\nexport default class extends React.Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n        this.state = {\n            open: false,\n            checkedAreaIds: [],\n            startDate: now,\n            endDate: now,\n            hideUnavailable: false,\n        }\n    }\n\n    componentDidMount() {\n        \n    }\n\n    onOpenChange = () => {\n        this.setState({ open: !this.state.open });\n    }\n\n    handleAreaChange = (checkedAreaIds: Array<string>) => {\n        this.setState({checkedAreaIds});\n    }\n\n    handleOk = () => {\n        this.setState({\n            open: false\n        });\n\n        const {\n            checkedAreaIds, \n            startDate, \n            endDate,\n            hideUnavailable\n        } = this.state;\n        \n        this.props.applyFilters({\n            areas: checkedAreaIds,\n            start: startDate,\n            end: endDate,\n            hideUnavailable\n        });\n    }\n\n    handleReset = () => {\n        this.setState({\n            checkedAreaIds: [],\n            startDate: undefined,\n            endDate: undefined,\n        });\n    }\n\n    renderContent = () => {\n        const {areas}:Props = this.props;\n        const {checkedAreaIds, hideUnavailable} = this.state;\n        const docWidth = document.documentElement.clientWidth;\n        const width = Math.min(docWidth - 25, 500);\n\n        return (\n            <div className=\"sidebar-content\" style={{width}}>\n                <div className=\"filters\">\n                    <p className=\"sub-title\">选择区域</p>\n                    <div className=\"areas-list\">\n                        <BtnCheckGroup \n                            options={areas.map(area => ({code: area, name: area}))}\n                            checkedCodes={checkedAreaIds}\n                            onChange={this.handleAreaChange}\n                        />\n                    </div>\n\n                    <p className=\"sub-title\">时间范围</p>\n                    <div className=\"period\">\n                        <List className=\"date-picker-list\" style={{ backgroundColor: 'white' }}>\n                            <DatePicker\n                                mode=\"date\"\n                                title=\"开始日期\"\n                                extra=\"Optional\"\n                                value={this.state.startDate}\n                                onChange={date => this.setState({ startDate: date })}\n                            >\n                                <List.Item arrow=\"horizontal\">起始</List.Item>\n                            </DatePicker>\n\n                            <DatePicker\n                                mode=\"date\"\n                                title=\"结束日期\"\n                                extra=\"Optional\"\n                                value={this.state.endDate}\n                                onChange={date => this.setState({ endDate: date })}\n                            >\n                                <List.Item arrow=\"horizontal\">截止</List.Item>\n                            </DatePicker>\n                        </List>\n                    </div>\n\n                    <p className=\"sub-title\">其他</p>\n                    <div className=\"other\">\n\n                    <CheckboxItem \n                        checked={hideUnavailable} \n                        onChange={(e: any) => this.setState({hideUnavailable: e.target.checked})}\n                    >\n                        不显示接待结束的景区\n                    </CheckboxItem>\n                    </div>\n                </div>\n\n                <div className=\"btn-groups\">\n                    <Button \n                        inline \n                        style={{ marginRight: '16px' }}\n                        onClick={this.handleReset}\n                    >重置</Button>\n                    <Button \n                        type=\"primary\" \n                        inline\n                        onClick={this.handleOk}\n                    >确认</Button>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        const {children}:Props = this.props;\n        return(\n            <Drawer\n                className=\"my-drawer\"\n                style={{ minHeight: document.documentElement.clientHeight }}\n                enableDragHandle\n                contentStyle={{ color: '#A6A6A6', textAlign: 'center' }}\n                sidebar={this.renderContent()}\n                open={this.state.open}\n                position={'right'}\n                onOpenChange={this.onOpenChange}\n            >\n                {children}\n            </Drawer>\n        )\n    }\n}","import React from 'react'\nimport locationIcon from '@/assets/image/location-icon.svg'\nimport Scenic from '@/models/Scenic'\n\nimport './index.less'\n\ninterface ListProps {\n    children?: React.ElementType,\n}\n\nconst ScenicList = (props: ListProps) => {\n    return (\n        <div className=\"scenic-list\">\n            {props.children}\n        </div>\n    )\n}\n\nScenicList.Item = (props: Scenic) => {\n\n    const period = 2 === props.dates.length ? props.dates.join(' - ') : '';\n    const isOver = !props.link;\n    const locationLink = 'https://www.amap.com/search?query=' + props.name;\n\n    const {name, area, link, imgUrl} = props;\n\n    return (\n        <div className={`scenic-list-item ${isOver ? 'isover' : ''}`}>\n            <div className=\"item-title\">\n                <h3>\n                    {link ? \n                        <a \n                            href={props.link} \n                            target=\"_blank\" \n                            rel=\"noopener noreferrer\"\n                        >{name}</a> : name\n                    }\n                </h3>\n\n                <a \n                    href={locationLink} \n                    target=\"_blank\" \n                    className=\"location\" \n                    rel=\"noopener noreferrer\"\n                >\n                    <img \n                        className=\"location-img\" \n                        src={locationIcon} \n                        alt=\"case1\" \n                    />\n                </a>\n            </div>\n            <div className=\"item-main\">\n                <div className=\"item-meta\">\n                    <div className=\"meta-line\">\n                        <label>景区票价: </label> \n                        <text>{props.price}元</text>\n                    </div>\n                    <div className=\"meta-line\">\n                        <label>接待时间: </label>\n                        <text>{props.dateTxt}</text>\n                    </div>\n                    <div className=\"meta-line\">\n                        <label>持卡权益: </label> \n                        <text>{props.notice}</text>\n                    </div>\n                </div>\n                <div className=\"item-thumb\">\n                    <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                        <div className=\"image\" style={{backgroundImage: 'url('+imgUrl+')'}}></div>\n                    </a>\n                </div>\n            </div>\n            <div className=\"item-area\">\n                <div className=\"area-name\">{area}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default ScenicList","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { ListView, ActivityIndicator } from 'antd-mobile';\nimport NavBar from \"./Nav\";\nimport SideBar from \"./SideBar\";\nimport List from \"@/components/ScenicList\";\nimport homeActions from \"@/store/home/actions\";\nimport Scenic from '@/models/Scenic';\n// types\nimport {RootState} from '@/store';\nimport \"./index.less\";\n\nconst PAGE_SIZE = 10;\n\ntype Props = {\n    title: string;\n    areas: Array<string>;\n    scenics: Array<Scenic>;\n    allScenics: Array<Scenic>;\n    actions: any;\n    isLoading: boolean;\n    version: string;\n};\n\ntype State = {\n    scenics: Array<Scenic>,\n    dataSource: any;\n    keyword: string;\n    isLoading: boolean;\n    pageIndex: number;\n    height: number;\n};\n\nfunction MyBody(props:any) {\n    return (\n      <div className=\"am-list-body my-body\">\n        <span style={{ display: 'none' }}>you can custom body wrap element</span>\n        {props.children}\n      </div>\n    );\n}\n\nclass Home extends React.Component<Props, State> {\n    lv: React.RefObject<any>;\n    sideBarRef: React.RefObject<any>;\n    initLoad: boolean = false;\n\n    constructor(props: Props){\n        super(props);\n\n        this.sideBarRef = React.createRef();\n        this.lv = React.createRef();\n\n        const dataSource = new ListView.DataSource({\n            rowHasChanged: (row1:any, row2:any) => {\n                return row1 !== row2\n            },\n        });\n\n        this.state = {\n            scenics: props.scenics,\n            dataSource,\n            keyword: '',\n            isLoading: false,\n            pageIndex: 1,\n            height: 300,\n        };\n    }\n\n    async componentDidMount(){\n        const {actions} = this.props;\n        await actions.fetchScenics();\n        await actions.fetchAreas();\n\n        let offsetTop = 0;\n        let dom = this.lv ? ReactDOM.findDOMNode(this.lv.current) : null;\n        if(null !== dom){\n            offsetTop = dom.parentNode ? (dom.parentNode as HTMLBaseElement).offsetTop : 0;\n        }\n        const height = document.documentElement.clientHeight - offsetTop;\n        this.setState({height})\n    }\n\n    componentWillReceiveProps(nextProps: Props){\n        const {scenics, allScenics}: Props = nextProps;\n        \n        // do initial search/filter, excute only once\n        if(!this.initLoad && (allScenics.length && !scenics.length)){\n            this.initLoad = true;\n            this.props.actions.applyFilters({});\n        }\n\n        this.setState({scenics});\n    }\n\n    openSideBar = () => {\n        this.sideBarRef && this.sideBarRef.current.onOpenChange();\n    }\n\n    handleSearch = (value: string) => {\n        const {actions}: Props = this.props;\n        actions.applyFilters({keyword: value});\n    }\n\n    handleSetVersion = async (version: string) => {\n        const {actions}: Props = this.props;\n\n        actions.setVersion(version);\n        await actions.fetchScenics(true);\n        await actions.fetchAreas(true);\n\n        this.props.actions.applyFilters({});\n    }\n\n    /**\n     * load new data\n     */\n    onEndReached = () => {\n        console.log('fire onEndReached');\n        const {isLoading, pageIndex, scenics} = this.state;\n        const hasMore = scenics.length > pageIndex * PAGE_SIZE;\n        if(isLoading || !hasMore) return;\n\n        setTimeout(() => {\n            this.setState({isLoading: false, pageIndex: pageIndex + 1})\n        }, 800);\n    }\n\n    renderRow = (rowData: any, sectionId: any, rowId: any) => {\n        return (\n            <div key={rowId} className=\"scenic-item\">\n                <List.Item {...rowData} />\n            </div>\n        )\n    }\n\n    render() {\n        const {scenics, dataSource, pageIndex, height} = this.state;\n        const {isLoading, actions, version} = this.props;\n\n        const scenicsToShow = pageIndex * PAGE_SIZE < scenics.length ? scenics.slice(0, pageIndex * PAGE_SIZE) : scenics;\n        const renderData = scenicsToShow.length ? dataSource.cloneWithRows(scenicsToShow) : dataSource;\n\n        return (\n            <div className=\"page-home\">\n                <SideBar \n                    title={'搜索'}\n                    ref={this.sideBarRef}\n                    areas={this.props.areas}\n                    applyFilters={actions.applyFilters}\n                >\n                    <NavBar\n                        title={'京津冀一卡通'}\n                        onRightClick={this.openSideBar}\n                        onSearch={this.handleSearch}\n                        version={version}\n                        setVersion={this.handleSetVersion}\n                    />\n                    <div className=\"page-content\">\n                        <ListView \n                            ref={this.lv}\n                            style={{height, overflow:'auto'}}\n                            dataSource={renderData}\n                            renderRow={this.renderRow}\n                            className=\"am-list scenic-list\"\n                            pageSize={5}\n                            onEndReached={this.onEndReached}\n                            onEndReachedThreshold={20}\n                            renderBodyComponent={() => <MyBody />}\n                            // useBodyScroll\n                            onScroll={() => { console.log('scroll'); }}\n                            renderFooter={() => (\n                                <div style={{ padding: 30, textAlign: 'center' }}>\n                                    {this.state.isLoading ? '加载中...' : '已加载完成'}\n                                </div>\n                            )}\n                        />\n                    </div>\n                </SideBar>\n                <ActivityIndicator\n                    toast\n                    animating={isLoading}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState, ownProps: Props) => {\n    const {areas, scenics, filteredScenics, isLoading, version} = state.homeStore;\n\n    return {\n        title: '',\n        areas,\n        scenics: filteredScenics,\n        allScenics: scenics,\n        isLoading,\n        version\n    };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        actions: bindActionCreators(homeActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Icon} from 'antd-mobile';\nimport { connect } from 'react-redux';\nimport { NavBar } from 'antd-mobile';\n\nimport {match} from 'react-router';\nimport {History} from 'history';\nimport Scenic from '@/models/Scenic';\nimport {RootState} from '@/store';\n\nimport homeActions from \"@/store/home/actions\";\nimport './index.less';\n\ninterface OwnProps{\n    match: match;\n    history: History;\n}\n\ninterface Props extends OwnProps{\n    scenic: Scenic|null;\n}\n\ninterface State{\n    \n}\n\nclass Detail extends React.Component<Props, State>{\n    handleLeftClick = () => {\n        const {history} = this.props;\n        history.push('/');\n    }\n\n    render(){\n        const {scenic}: Props = this.props;\n        if(!scenic) return null;\n\n        return(\n            <div\n                className=\"detail-page\"\n            >\n                <NavBar\n                    mode=\"light\"\n                    icon={<Icon type=\"left\" />}\n                    onLeftClick={this.handleLeftClick}\n                >{scenic.name}</NavBar>\n                <div className=\"page-content\">\n                    <iframe \n                        src={scenic.link}\n                        title={scenic.name}\n                        width=\"100%\"\n                        height=\"100%\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n    const {scenics} = state.homeStore;\n    const {params}: any = ownProps.match;\n\n    console.log('ownProps', ownProps);\n    \n    let scenic = null;\n    if(params.id && scenics.length){\n        scenic = scenics.find(item => params.id === item.id) || null;\n    }\n\n    return {\n        params,\n        scenic,\n    };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    dispatch(homeActions.fetchScenics());\n    \n    return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","/* eslint no-dupe-keys: 0 */\nimport React from 'react';\nimport {ListView} from 'antd-mobile';\n\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n    const dataBlob = [];\n    for (let i = 0; i < NUM_ROWS; i++) {\n        const ii = (pIndex * NUM_ROWS) + i;\n        dataBlob.push(`row - ${ii}`);\n    }\n    return dataBlob;\n}\n\nconst MySectionBodyWrapper = (props) => {\n    return (<table className=\"my-section-body\">\n        <thead><tr><td>table title</td></tr></thead>\n        <tbody>{props.children}</tbody>\n    </table>);\n};\n\nclass Demo extends React.Component {\n    constructor(props) {\n        super(props);\n        const dataSource = new ListView.DataSource({\n            rowHasChanged: (row1, row2) => row1 !== row2,\n        });\n\n        this.state = {\n            dataSource,\n            isLoading: true,\n        };\n    }\n\n    componentDidMount() {\n        // simulate initial Ajax\n        setTimeout(() => {\n            this.rData = genData();\n            this.setState({\n                // dataSource: this.state.dataSource.cloneWithRows(this.rData),\n                isLoading: false,\n            });\n        }, 600);\n    }\n\n    onEndReached = (event) => {\n        console.log('fire onEndReached');\n        // load new data\n        // hasMore: from backend data, indicates whether it is the last page, here is false\n        if (this.state.isLoading && !this.state.hasMore) {\n            return;\n        }\n        console.log('reach end', event);\n        this.setState({ isLoading: true });\n        setTimeout(() => {\n            this.rData = this.rData.concat(genData(++pageIndex));\n            this.setState({\n                isLoading: false,\n            });\n        }, 1000);\n    }\n\n    render() {\n        const renderData = this.rData ? this.state.dataSource.cloneWithRows(this.rData) : this.state.dataSource;\n\n        return (<div>\n            <ListView\n                ref={el => this.lv = el}\n                dataSource={renderData}\n                useBodyScroll\n                renderHeader={() => <div style={{ padding: 30 }}>设置了`useBodyScroll`</div>}\n                renderFooter={() =>\n                    <div style={{ padding: 30 }}>{this.state.isLoading ? 'loading...' : 'loaded'}</div>}\n                renderBodyComponent={() => <div className=\"for-body-demo\" />}\n                renderSectionBodyWrapper={(sectionID) => <MySectionBodyWrapper key={sectionID} />}\n                renderRow={(rowData) => (<div style={{ height: 50 }}>\n                    <span>{rowData} Let me keep typing here so it wraps at least one line.</span>\n                </div>)}\n                onEndReached={this.onEndReached}\n                onEndReachedThreshold={10}\n                pageSize={10}\n            />\n        </div>);\n    }\n}\n\n\nexport default Demo;","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Home from '@/pages/Home';\nimport Detail from '@/pages/Detail';\nimport ListView from '@/components/test/DemoListView';\n\nexport default class RouteConfig extends React.Component<{}, {}>{\n    render(){\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/scenic/:id\" component={Detail} />\n                    <Route path=\"/test\" exact component={ListView} />\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {store} from '@/store/';\nimport Route from '@/router/';\n\nconst App: React.FC = () => {\n    return (\n        <Provider store={store}>\n            <Route />\n        </Provider>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}