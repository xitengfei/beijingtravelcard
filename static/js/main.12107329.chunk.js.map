{"version":3,"sources":["pages/Home/img/yikatong-logo-sm.png","components/List/img/location-icon.svg","utils/ScenicsFilter.js","api/api.js","api/server.js","store/home/actions.ts","store/home/reducer.ts","utils/genReducer.js","store/index.ts","pages/Home/Nav/index.tsx","components/BtnCheckGroup/index.tsx","pages/Home/SideBar/index.tsx","components/List/index.tsx","pages/Home/index.tsx","components/test/DemoListView.js","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ScenicsFilter","keywordFilter","items","keyword","filter","item","name","indexOf","area_name","areaFilter","areas","length","area_id","momentFilter","start","end","_item$periods","periods","dates","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","period","value","_this","isDateOverLaps","err","return","filterItems","filters","newItems","slice","startDate","endDate","source","t1","moment","t2","isSameOrBefore","isSameOrAfter","api","this","axios","result","method","url","params","Promise","resolve","reject","_option","Object","objectSpread","baseURL","timeout","data","headers","withCredentials","validateStatus","status","request","then","res","JSON","parse","error","response","setLoading","isLoading","type","payload","home_actions","fetchAreas","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","API","getAreas","sent","stop","_x","apply","arguments","fetchScenics","_ref2","_callee2","scenics","_context2","getScenics","map","scenic","i","split","push","_x2","applyFilters","getState","homeStore","setTimeout","filteredScenics","genReducer","initState","handlers","state","action","handler","title","_ACTION_HANDLERS","defineProperty","_ref3","assign","_ref4","_ref5","_ref6","loggerMiddleware","createLogger","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","_default","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","autoFocusInst","focus","_this2","_this$props","onRightClick","onSearch","react_default","createElement","className","nav_bar_default","mode","icon","src","Logo","alt","rightContent","icon_default","key","onClick","search_bar_default","placeholder","ref","onSubmit","React","Component","BtnCheckGroup","options","checkedCodes","onChange","button_default","inline","size","option","code","isChecked","includes","check","nextCheckedCodes","handleCheck","nowTimeStamp","Date","now","onOpenChange","setState","open","handleAreaChange","checkedAreaIds","handleOk","_this$state","handleReset","renderContent","src_components_BtnCheckGroup","area","id","list_default","style","backgroundColor","date_picker_default","extra","date","Item","arrow","marginRight","children","drawer_default","minHeight","document","documentElement","clientHeight","enableDragHandle","contentStyle","color","textAlign","sidebar","position","List","locationIcon","limit_type","price","level","notice","PAGE_SIZE","MyBody","react","display","Home","lv","sideBarRef","openSideBar","current","handleSearch","actions","renderRow","rowData","sectionId","rowId","src_components_List","onEndReached","console","log","pageIndex","hasMore","dataSource","list_view_default","DataSource","rowHasChanged","row1","row2","height","offsetTop","dom","ReactDOM","findDOMNode","parentNode","nextProps","_this$state2","scenicsToShow","renderData","cloneWithRows","Home_SideBar_default","Home_Nav_default","overflow","pageSize","onEndReachedThreshold","renderBodyComponent","onScroll","renderFooter","padding","activity_indicator_default","toast","animating","connect","ownProps","_state$homeStore","bindActionCreators","homeActions","NUM_ROWS","genData","pIndex","dataBlob","ii","concat","MySectionBodyWrapper","Demo","event","rData","_this3","el","useBodyScroll","renderHeader","renderSectionBodyWrapper","sectionID","DemoListView_MySectionBodyWrapper","RouteConfig","react_router_dom","react_router","path","exact","component","ListView","App","es","router_RouteConfig","Boolean","window","location","hostname","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.12107329.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yikatong-logo-sm.e302ab8c.png\";","module.exports = __webpack_public_path__ + \"static/media/location-icon.2c1ce28d.svg\";","import moment from 'moment';\r\n\r\nclass ScenicsFilter{\r\n    isDateOverLaps(startDate, endDate, source){\r\n        const format = 'YYYY.M.D';\r\n        const t1 = moment(source[0], format);\r\n        const t2 = moment(source[1], format);\r\n \r\n        if(t1.isSameOrBefore(endDate) && t2.isSameOrAfter(startDate)){\r\n            return true;\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n    keywordFilter = (items, keyword) => {\r\n        return items.filter(item => { \r\n            return item.name.indexOf(keyword) > -1 || item.area_name.indexOf(keyword) > -1;\r\n        })\r\n    };\r\n\r\n    areaFilter = (items, areas) => {\r\n        if(!areas.length) return items;\r\n        \r\n        return items.filter((item)=>{\r\n            return areas.indexOf(item.area_id) > -1\r\n        })\r\n    };\r\n\r\n    momentFilter = (items, start, end) => {\r\n        if(!start && !end) return items;\r\n\r\n        return items.filter(item => {\r\n            let {periods = []} = item;\r\n            if(!item.dates) return true;\r\n\r\n            let match = false;\r\n            for(let period of periods){\r\n                if(this.isDateOverLaps(start, end, period)){\r\n                    match = true;\r\n                    break;\r\n                }\r\n            }\r\n            return match;\r\n        });\r\n    };\r\n\r\n    filterItems = (items, filters) => {\r\n        let newItems = items.slice();\r\n\r\n        if(filters.keyword){\r\n            newItems = this.keywordFilter(newItems, filters.keyword);\r\n        }\r\n        \r\n        if(filters.areas && filters.areas.length){\r\n            newItems = this.areaFilter(newItems, filters.areas);\r\n        }\r\n\r\n        if(filters.start && filters.end){\r\n            newItems = this.momentFilter(newItems, filters.start, filters.end);\r\n        }\r\n\r\n        return newItems;\r\n    };\r\n}\r\n\r\nexport default ScenicsFilter","import Server from './server';\r\n\r\nclass API extends Server {\r\n    async getAreas() {\r\n        try {\r\n            const result = await this.axios('get', `/json/areas.json`);\r\n            return result;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n\r\n    async getScenics() {\r\n        try {\r\n            const result = await this.axios('get', `/json/scenics.json`);\r\n            return result;\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new API();","import axios from 'axios';\r\n/**\r\n * 主要params参数\r\n * @params method {string} 方法名\r\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\r\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\r\n * @params timeout {number} 请求超时时间 默认 30000\r\n * @params params {object}  get方式传参key值\r\n * @params headers {string} 指定请求头信息\r\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\r\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\r\n * @return {Promise}\r\n * 其他更多拓展参看axios文档后 自行拓展\r\n * 注意：params中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在params中带入\r\n*/\r\n\r\nexport default class Server {\r\n    axios(method, url, params) {\r\n        return new Promise((resolve, reject) => {\r\n            if (typeof params !== 'object') params = {};\r\n            let _option = params;\r\n            _option = {\r\n                method,\r\n                url,\r\n                baseURL: '/',\r\n                timeout: 30000,\r\n                params: null,\r\n                data: null,\r\n                headers: null,\r\n                withCredentials: true, //是否携带cookies发起请求\r\n                validateStatus: (status) => {\r\n                    return status >= 200 && status < 300;\r\n                },\r\n                ...params,\r\n            }\r\n            axios.request(_option).then(res => {\r\n                resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\r\n            }, error => {\r\n                if (error.response) {\r\n                    reject(error.response.data)\r\n                } else {\r\n                    reject(error)\r\n                }\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import {Dispatch} from 'redux';\r\nimport ScenicsFilter from '@/utils/ScenicsFilter';\r\nimport API from '@/api/api';\r\n\r\nimport Home from './type';\r\nimport {RootState} from '@/store/';\r\nimport Filters from '@/models/Filters';\r\nimport Scenic from '@/models/Scenic';\r\n\r\n// ===============================\r\n// Action Type\r\n// ===============================\r\nexport const HOME_SET_YIKATONG_SCENICS = 'HOME_SET_YIKATONG_SCENICS'\r\nexport const HOME_SET_YIKATONG_AREAS = 'HOME_SET_YIKATONG_AREAS'\r\nexport const HOME_SET_FILTERING_STATE = 'HOME_SET_FILTERING_STATE'\r\nexport const HOME_SET_FILTERED_SCENICS = 'HOME_SET_FILTERED_SCENICS'\r\n\r\n\r\n// ===============================\r\n// Action Creator\r\n// ===============================\r\nexport const fetchAreas = function(){\r\n    return async (dispatch:Dispatch): Promise<void> => {\r\n        const areas = await API.getAreas();\r\n        dispatch({\r\n            type: HOME_SET_YIKATONG_AREAS,\r\n            payload: areas\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchScenics = function(){\r\n    return async (dispatch:Dispatch): Promise<void> => {\r\n        let scenics = await API.getScenics();\r\n        scenics = scenics.map((scenic: Scenic) => {\r\n            scenic.periods = [];\r\n            let i = 0;\r\n            const dates: Array<string> = scenic.dates.split('-');\r\n            while(i < dates.length){\r\n                if(dates[i] && dates[i+1]){\r\n                    scenic.periods.push([dates[i], dates[i+1]]);\r\n                }\r\n                i += 2;\r\n            }\r\n            return scenic;\r\n        });\r\n\r\n        dispatch({\r\n            type: HOME_SET_YIKATONG_SCENICS,\r\n            payload: scenics\r\n        })\r\n    }\r\n}\r\n\r\nexport const setLoading = (isLoading: boolean) => ({\r\n    type: HOME_SET_FILTERING_STATE,\r\n    payload: isLoading,\r\n})\r\n\r\n/**\r\n * Apply Filters on scenics\r\n * @param filters \r\n */\r\nexport const applyFilters = (filters: Filters) => (dispatch: Dispatch, getState: () => RootState) =>  {\r\n    const {\r\n        homeStore: {\r\n            scenics\r\n        }\r\n    } = getState();\r\n\r\n    dispatch(setLoading(true));\r\n\r\n    setTimeout(()=>{\r\n        // start filtering\r\n        const filterTool = new ScenicsFilter();\r\n        const filteredScenics: Array<Scenic> = filterTool.filterItems(scenics, filters)\r\n\r\n        dispatch({\r\n            type: HOME_SET_FILTERED_SCENICS,\r\n            payload: filteredScenics\r\n        })\r\n\r\n        dispatch(setLoading(false));\r\n    }, 1000)\r\n}\r\n\r\n/**\r\n * export all action creators\r\n */\r\nexport default {\r\n    fetchAreas,\r\n    fetchScenics,\r\n    setLoading,\r\n    applyFilters,\r\n}\r\n\r\n// ===============================\r\n// Action Handlers\r\n// ===============================\r\ntype Action = {type: string, payload: any};\r\nexport const ACTION_HANDLERS = {\r\n    [HOME_SET_YIKATONG_SCENICS]: (state: Home, {payload}: Action): Home => Object.assign({}, state, {scenics: payload}),\r\n    [HOME_SET_YIKATONG_AREAS]: (state: Home, {payload}: Action): Home => Object.assign({}, state, {areas: payload}),\r\n    [HOME_SET_FILTERED_SCENICS]: (state: Home, {payload}: Action): Home => {\r\n        return Object.assign({}, state, {filteredScenics: payload});\r\n    },\r\n    [HOME_SET_FILTERING_STATE]: (state: Home, {payload}: Action): Home => {\r\n        return Object.assign({}, state, {isLoading: payload});\r\n    }\r\n}","import genReducer from '@/utils/genReducer';\r\nimport Home from './type';\r\nimport {ACTION_HANDLERS} from './actions';\r\n\r\nconst initState: Home = {\r\n    title:'',\r\n    areas:[],\r\n    scenics:[],\r\n    filteredScenics:[],\r\n    isLoading: false,\r\n};\r\n\r\nexport default genReducer(initState, ACTION_HANDLERS)","export default function genReducer(initState, handlers){\r\n    return function reducer(state = initState, action){\r\n        const handler = handlers[action.type];\r\n        return handler ? handler(state, action) : state\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { createLogger } from 'redux-logger';\r\nimport homeStore from './home/reducer';\r\nimport Home from './home/type';\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n  combineReducers({homeStore}),\r\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n);\r\n\r\nexport interface RootState{\r\n    homeStore: Home\r\n};","import React from 'react';\r\nimport { NavBar, Icon, SearchBar } from 'antd-mobile';\r\nimport Logo from '../img/yikatong-logo-sm.png';\r\nimport \"./index.less\";\r\n\r\ninterface Props{\r\n    title: string,\r\n    onRightClick(): void,\r\n    onSearch(keyword: string): void,\r\n}\r\n\r\ninterface State{\r\n    \r\n}\r\n\r\nexport default class extends React.Component<Props, State>{\r\n    autoFocusInst: any;\r\n\r\n    constructor(props: Props){\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.autoFocusInst.focus();\r\n    }\r\n\r\n    render(){\r\n        const {title, onRightClick, onSearch} = this.props;\r\n        return(\r\n            <div\r\n                className=\"headerNav\"\r\n            >\r\n                <NavBar\r\n                    mode=\"light\"\r\n                    icon={<img className=\"brand\" src={Logo} alt=\"logo\" />}\r\n                    rightContent={[\r\n                        <Icon key=\"1\" type=\"ellipsis\" onClick={onRightClick} />,\r\n                    ]}\r\n                >{title}</NavBar>\r\n                <SearchBar \r\n                    placeholder=\"自动获取光标\" \r\n                    ref={ref => this.autoFocusInst = ref}\r\n                    onSubmit={onSearch}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Button} from 'antd-mobile';\r\nimport './index.less';\r\n\r\ninterface Option{\r\n    code: string,\r\n    name: string\r\n}\r\n\r\ninterface Props{\r\n    options: Array<Option>,\r\n    checkedCodes: Array<string>,\r\n    onChange: (checkedCodes: Array<string>) => void\r\n}\r\n\r\nconst BtnCheckGroup = function(props: Props){\r\n    const {options, checkedCodes, onChange} = props;\r\n\r\n    const handleCheck = (code: string, check: boolean) => {\r\n        let nextCheckedCodes = checkedCodes.slice();\r\n        \r\n        if(check){\r\n            nextCheckedCodes.push(code);\r\n        }else{\r\n            nextCheckedCodes = nextCheckedCodes.filter(item => code !== item);\r\n        }\r\n\r\n        onChange(nextCheckedCodes);\r\n    };\r\n\r\n    return(\r\n        <div className=\"btn-check-group\">\r\n            <Button \r\n                inline\r\n                key={'nolimit'}\r\n                type={checkedCodes.length ? 'ghost':'primary'}\r\n                size=\"small\"\r\n                onClick={() => onChange([])}\r\n            >\r\n                不限\r\n            </Button>\r\n\r\n            {options.map((option: Option) => {\r\n                const {code, name} = option;\r\n                const isChecked = checkedCodes.includes(code);\r\n\r\n                return (\r\n                    <Button \r\n                        inline\r\n                        key={code}\r\n                        type={isChecked ? 'primary':'ghost'}\r\n                        size=\"small\"\r\n                        className={isChecked ? 'checked':''}\r\n                        onClick={() => {\r\n                            const isToCheck = isChecked ? false : true;\r\n                            handleCheck(code, isToCheck);\r\n                        }}\r\n                    >\r\n                        {name}\r\n                    </Button>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BtnCheckGroup;\r\n","import React, { ReactNode } from 'react';\r\nimport { Drawer, Button, DatePicker, List } from 'antd-mobile';\r\nimport BtnCheckGroup from '@/components/BtnCheckGroup';\r\nimport Area from '@/models/Area';\r\nimport Filters from '@/models/Filters';\r\nimport \"./index.less\";\r\n\r\ninterface Props{\r\n    children: ReactNode,\r\n    title: string,\r\n    areas: Array<Area>,\r\n    ref: React.RefObject<any>,\r\n    applyFilters: (filters: Filters) => void\r\n}\r\ninterface State{\r\n    open: boolean,\r\n    checkedAreaIds: Array<string>,\r\n    startDate: Date | undefined,\r\n    endDate: Date | undefined,\r\n}\r\n\r\nconst nowTimeStamp = Date.now();\r\nconst now = new Date(nowTimeStamp);\r\n// GMT is not currently observed in the UK. So use UTC now.\r\n// const utcNow = new Date(now.getTime() + (now.getTimezoneOffset() * 60000));\r\n\r\nexport default class extends React.Component<Props, State>{\r\n    constructor(props: Props){\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            checkedAreaIds: [],\r\n            startDate: now,\r\n            endDate: now,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n    }\r\n\r\n    onOpenChange = () => {\r\n        this.setState({ open: !this.state.open });\r\n    }\r\n\r\n    handleAreaChange = (checkedAreaIds: Array<string>) => {\r\n        this.setState({checkedAreaIds});\r\n    }\r\n\r\n    handleOk = () => {\r\n        this.setState({\r\n            open: false\r\n        });\r\n\r\n        const {checkedAreaIds, startDate, endDate} = this.state;\r\n        this.props.applyFilters({\r\n            areas: checkedAreaIds,\r\n            start: startDate,\r\n            end: endDate\r\n        });\r\n    }\r\n\r\n    handleReset = () => {\r\n        this.setState({\r\n            checkedAreaIds: [],\r\n            startDate: undefined,\r\n            endDate: undefined,\r\n        });\r\n    }\r\n\r\n    renderContent = () => {\r\n        const {areas}:Props = this.props;\r\n        const {checkedAreaIds} = this.state;\r\n\r\n        return (\r\n            <div className=\"sidebar-content\">\r\n                <div className=\"filters\">\r\n                    <p className=\"sub-title\">选择区域</p>\r\n                    <div className=\"areas-list\">\r\n                        <BtnCheckGroup \r\n                            options={areas.map(area => ({code: area.id, name: area.name}))}\r\n                            checkedCodes={checkedAreaIds}\r\n                            onChange={this.handleAreaChange}\r\n                        />\r\n                    </div>\r\n\r\n                    <p className=\"sub-title\">时间范围</p>\r\n                    <div className=\"period\">\r\n                        <List className=\"date-picker-list\" style={{ backgroundColor: 'white' }}>\r\n                            <DatePicker\r\n                                mode=\"date\"\r\n                                title=\"开始日期\"\r\n                                extra=\"Optional\"\r\n                                value={this.state.startDate}\r\n                                onChange={date => this.setState({ startDate: date })}\r\n                            >\r\n                                <List.Item arrow=\"horizontal\">起始</List.Item>\r\n                            </DatePicker>\r\n\r\n                            <DatePicker\r\n                                mode=\"date\"\r\n                                title=\"结束日期\"\r\n                                extra=\"Optional\"\r\n                                value={this.state.endDate}\r\n                                onChange={date => this.setState({ endDate: date })}\r\n                            >\r\n                                <List.Item arrow=\"horizontal\">截止</List.Item>\r\n                            </DatePicker>\r\n                        </List>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"btn-groups\">\r\n                    <Button \r\n                        inline \r\n                        style={{ marginRight: '16px' }}\r\n                        onClick={this.handleReset}\r\n                    >重置</Button>\r\n                    <Button \r\n                        type=\"primary\" \r\n                        inline\r\n                        onClick={this.handleOk}\r\n                    >确认</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const {children}:Props = this.props;\r\n        return(\r\n            <Drawer\r\n                className=\"my-drawer\"\r\n                style={{ minHeight: document.documentElement.clientHeight }}\r\n                enableDragHandle\r\n                contentStyle={{ color: '#A6A6A6', textAlign: 'center' }}\r\n                sidebar={this.renderContent()}\r\n                open={this.state.open}\r\n                position={'right'}\r\n                onOpenChange={this.onOpenChange}\r\n            >\r\n                {children}\r\n            </Drawer>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport locationIcon from './img/location-icon.svg'\r\n\r\nimport './index.less'\r\n\r\ninterface ListProps{\r\n    children?: React.ElementType,\r\n}\r\n\r\nconst List = (props: ListProps) => {\r\n    return (\r\n        <div className=\"xui-list\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface ItemProps{\r\n    id: string,\r\n    name: string,\r\n    area_name: string,\r\n    dates: string,\r\n    limit_type: string,\r\n    price: string,\r\n    level: string,\r\n    notice: string\r\n}\r\n\r\nList.Item = (props: ItemProps) => {\r\n    return (\r\n        <div className=\"xui-list-item\">\r\n            <div className=\"item-meta\">\r\n                <span className=\"icon-id\">{props.id}</span>\r\n                <h4 className=\"meta-title\">{props.name}</h4>\r\n                <span className=\"area\">{props.area_name}</span>\r\n                <img className=\"location\" src={locationIcon} alt=\"case1\" />\r\n            </div>\r\n            <div className=\"item-content\">\r\n                <div className=\"meta-line\">\r\n                    <div className=\"time\">时间段：{props.dates}</div>\r\n                    <div className=\"limit\">{props.limit_type}</div>\r\n                </div>\r\n                <div className=\"meta-line\">\r\n                    <div className=\"price\">票价：{props.price}元</div>\r\n                    <div className=\"level\">A级：{props.level ? props.level : '无'}</div>\r\n                </div>\r\n\r\n                <p className=\"description\">\r\n                    特别说明: {props.notice}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List","import * as React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { ListView, ActivityIndicator } from 'antd-mobile';\r\nimport NavBar from \"./Nav\";\r\nimport SideBar from \"./SideBar\";\r\nimport List from \"@/components/List\";\r\nimport homeActions from \"@/store/home/actions\";\r\nimport Area from '@/models/Area';\r\nimport Scenic from '@/models/Scenic';\r\n// types\r\nimport {RootState} from '@/store';\r\nimport \"./index.less\";\r\n\r\nconst PAGE_SIZE = 10;\r\n\r\ntype Props = {\r\n    title: string;\r\n    areas: Array<Area>;\r\n    scenics: Array<Scenic>;\r\n    actions: any;\r\n    isLoading: boolean;\r\n};\r\n\r\ntype State = {\r\n    scenics: Array<Scenic>,\r\n    dataSource: any;\r\n    keyword: string;\r\n    isLoading: boolean;\r\n    pageIndex: number;\r\n    height: number;\r\n};\r\n\r\nfunction MyBody(props:any) {\r\n    return (\r\n      <div className=\"am-list-body my-body\">\r\n        <span style={{ display: 'none' }}>you can custom body wrap element</span>\r\n        {props.children}\r\n      </div>\r\n    );\r\n}\r\n\r\nclass Home extends React.Component<Props, State> {\r\n    lv: React.RefObject<any>;\r\n    sideBarRef: React.RefObject<any>;\r\n\r\n    constructor(props: Props){\r\n        super(props);\r\n\r\n        this.sideBarRef = React.createRef();\r\n        this.lv = React.createRef();\r\n\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1:any, row2:any) => {\r\n                console.log('diff:', row1, row2);\r\n                return row1 !== row2\r\n            },\r\n        });\r\n\r\n        this.state = {\r\n            scenics: [],\r\n            dataSource,\r\n            keyword: '',\r\n            isLoading: false,\r\n            pageIndex: 1,\r\n            height: 300,\r\n        };\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await this.props.actions.fetchScenics();\r\n        await this.props.actions.fetchAreas();\r\n        this.props.actions.applyFilters({});\r\n\r\n        let offsetTop = 0;\r\n        let dom = this.lv ? ReactDOM.findDOMNode(this.lv.current) : null;\r\n        if(null !== dom){\r\n            offsetTop = dom.parentNode ? (dom.parentNode as HTMLBaseElement).offsetTop : 0;\r\n        }\r\n        const height = document.documentElement.clientHeight - offsetTop;\r\n        this.setState({height})\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps: Props){\r\n        const {scenics}: Props = nextProps;\r\n        this.setState({scenics});\r\n    }\r\n\r\n    openSideBar = () => {\r\n        this.sideBarRef && this.sideBarRef.current.onOpenChange();\r\n    }\r\n\r\n    handleSearch = (value: string) => {\r\n        const {actions}: Props = this.props;\r\n        actions.applyFilters({keyword: value});\r\n    }\r\n\r\n    renderRow = (rowData: any, sectionId: any, rowId: any) => {\r\n        return (\r\n            <div key={rowId} className=\"area-item\">\r\n                <List.Item {...rowData} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onEndReached = () => {\r\n        console.log('fire onEndReached');\r\n        const {isLoading, pageIndex, scenics} = this.state;\r\n        const hasMore = scenics.length > pageIndex * PAGE_SIZE;\r\n        if(isLoading || !hasMore) return;\r\n\r\n        setTimeout(() => {\r\n            this.setState({isLoading: false, pageIndex: pageIndex + 1})\r\n        }, 800);\r\n    }\r\n\r\n    render() {\r\n        const {scenics, dataSource, pageIndex, height} = this.state;\r\n        const {isLoading, actions} = this.props;\r\n\r\n        const scenicsToShow = pageIndex * PAGE_SIZE < scenics.length ? scenics.slice(0, pageIndex * PAGE_SIZE) : scenics;\r\n        const renderData = scenicsToShow.length ? dataSource.cloneWithRows(scenicsToShow) : dataSource;\r\n\r\n        return (\r\n            <div className=\"page-home\">\r\n                <SideBar \r\n                    title={'搜索'}\r\n                    ref={this.sideBarRef}\r\n                    areas={this.props.areas}\r\n                    applyFilters={actions.applyFilters}\r\n                >\r\n                    <NavBar\r\n                        title={'京津冀一卡通'}\r\n                        onRightClick={this.openSideBar}\r\n                        onSearch={this.handleSearch}\r\n                    />\r\n                    <div className=\"page-content\">\r\n                        <ListView \r\n                            ref={this.lv}\r\n                            style={{height, overflow:'auto'}}\r\n                            dataSource={renderData}\r\n                            renderRow={this.renderRow}\r\n                            className=\"am-list area-list xui-list\"\r\n                            pageSize={5}\r\n                            onEndReached={this.onEndReached}\r\n                            onEndReachedThreshold={20}\r\n                            renderBodyComponent={() => <MyBody />}\r\n                            // useBodyScroll\r\n                            onScroll={() => { console.log('scroll'); }}\r\n                            renderFooter={() => (\r\n                                <div style={{ padding: 30, textAlign: 'center' }}>\r\n                                    {this.state.isLoading ? 'Loading...' : 'Loaded'}\r\n                                </div>\r\n                            )}\r\n                        />\r\n                    </div>\r\n                </SideBar>\r\n                <ActivityIndicator\r\n                    toast\r\n                    animating={isLoading}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: RootState, ownProps: Props) => {\r\n    const {areas, filteredScenics, isLoading} = state.homeStore;\r\n\r\n    return {\r\n        title: '',\r\n        areas,\r\n        scenics: filteredScenics,\r\n        isLoading\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        actions: bindActionCreators(homeActions, dispatch)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","/* eslint no-dupe-keys: 0 */\r\nimport React from 'react';\r\nimport {ListView} from 'antd-mobile';\r\n\r\nconst NUM_ROWS = 20;\r\nlet pageIndex = 0;\r\n\r\nfunction genData(pIndex = 0) {\r\n    const dataBlob = [];\r\n    for (let i = 0; i < NUM_ROWS; i++) {\r\n        const ii = (pIndex * NUM_ROWS) + i;\r\n        dataBlob.push(`row - ${ii}`);\r\n    }\r\n    return dataBlob;\r\n}\r\n\r\nconst MySectionBodyWrapper = (props) => {\r\n    return (<table className=\"my-section-body\">\r\n        <thead><tr><td>table title</td></tr></thead>\r\n        <tbody>{props.children}</tbody>\r\n    </table>);\r\n};\r\n\r\nclass Demo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataSource = new ListView.DataSource({\r\n            rowHasChanged: (row1, row2) => row1 !== row2,\r\n        });\r\n\r\n        this.state = {\r\n            dataSource,\r\n            isLoading: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        // simulate initial Ajax\r\n        setTimeout(() => {\r\n            this.rData = genData();\r\n            this.setState({\r\n                // dataSource: this.state.dataSource.cloneWithRows(this.rData),\r\n                isLoading: false,\r\n            });\r\n        }, 600);\r\n    }\r\n\r\n    onEndReached = (event) => {\r\n        console.log('fire onEndReached');\r\n        // load new data\r\n        // hasMore: from backend data, indicates whether it is the last page, here is false\r\n        if (this.state.isLoading && !this.state.hasMore) {\r\n            return;\r\n        }\r\n        console.log('reach end', event);\r\n        this.setState({ isLoading: true });\r\n        setTimeout(() => {\r\n            this.rData = this.rData.concat(genData(++pageIndex));\r\n            this.setState({\r\n                isLoading: false,\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    render() {\r\n        const renderData = this.rData ? this.state.dataSource.cloneWithRows(this.rData) : this.state.dataSource;\r\n\r\n        return (<div>\r\n            <ListView\r\n                ref={el => this.lv = el}\r\n                dataSource={renderData}\r\n                useBodyScroll\r\n                renderHeader={() => <div style={{ padding: 30 }}>设置了`useBodyScroll`</div>}\r\n                renderFooter={() =>\r\n                    <div style={{ padding: 30 }}>{this.state.isLoading ? 'loading...' : 'loaded'}</div>}\r\n                renderBodyComponent={() => <div className=\"for-body-demo\" />}\r\n                renderSectionBodyWrapper={(sectionID) => <MySectionBodyWrapper key={sectionID} />}\r\n                renderRow={(rowData) => (<div style={{ height: 50 }}>\r\n                    <span>{rowData} Let me keep typing here so it wraps at least one line.</span>\r\n                </div>)}\r\n                onEndReached={this.onEndReached}\r\n                onEndReachedThreshold={10}\r\n                pageSize={10}\r\n            />\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\nexport default Demo;","import React from 'react'\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\r\n\r\nimport Home from '@/pages/Home';\r\nimport ListView from '@/components/test/DemoListView';\r\n\r\nexport default class RouteConfig extends React.Component<{}, {}>{\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Home} />\r\n                    <Route path=\"/test\" exact component={ListView} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {store} from '@/store/';\r\nimport Route from '@/router/';\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <Route />\r\n        </Provider>\r\n    );\r\n  }\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}