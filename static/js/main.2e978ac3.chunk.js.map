{"version":3,"sources":["assets/image/yikatong-logo-sm.png","components/List/img/location-icon.svg","utils/ScenicsFilter.js","api/api.js","api/server.js","store/home/actions.ts","store/home/reducer.ts","utils/genReducer.js","store/index.ts","components/SearchModal/index.tsx","pages/Home/Menu/index.tsx","pages/Home/Nav/index.tsx","components/BtnCheckGroup/index.tsx","pages/Home/SideBar/index.tsx","components/List/index.tsx","pages/Home/index.tsx","pages/Detail/index.tsx","components/test/DemoListView.js","router/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","ScenicsFilter","keywordFilter","items","keyword","filter","item","name","indexOf","area","areaFilter","areas","length","momentFilter","start","end","_item$periods","periods","match","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","period","value","_this","isDateOverLaps","err","return","filterItems","filters","newItems","slice","hideUnavailable","link","startDate","endDate","source","t1","moment","t2","isSameOrBefore","isSameOrAfter","api","this","axios","result","method","url","params","Promise","resolve","reject","_option","Object","objectSpread","baseURL","timeout","data","headers","withCredentials","validateStatus","status","request","then","res","JSON","parse","error","response","setLoading","isLoading","type","payload","home_actions","fetchAreas","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","getState","_getState","homeStore","wrap","_context","prev","abrupt","API","getAreas","sent","stop","_x","_x2","apply","arguments","fetchScenics","_ref2","_callee2","scenics","scenicsList","_context2","getScenics","map","scenic","index","id","dates","i","push","_x3","_x4","applyFilters","setTimeout","filteredScenics","genReducer","initState","handlers","state","action","handler","title","_ACTION_HANDLERS","defineProperty","_ref3","assign","_ref4","_ref5","_ref6","loggerMiddleware","createLogger","store","createStore","combineReducers","applyMiddleware","thunkMiddleware","SearchModal","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","autoFocusInst","handleSearch","setState","onSearch","nextProps","visible","console","log","focus","_this$props","placeholder","onCancel","react_default","createElement","modal_default","className","transparent","maskClosable","footer","search_bar_default","defaultValue","ref","showCancelButton","onSubmit","React","Component","Item","popover_default","Menu","overlay","key","align","overflow","adjustY","adjustX","style","height","padding","marginRight","display","alignItems","icon_default","_default","searchVisible","handleCancel","handleSearchClick","handleMenuSelect","node","onRightClick","_this$state","nav_bar_default","mode","icon","src","Logo","alt","rightContent","Home_Menu","onSelect","onClick","src_components_SearchModal","BtnCheckGroup","options","checkedCodes","onChange","button_default","inline","size","option","code","isChecked","includes","check","nextCheckedCodes","handleCheck","nowTimeStamp","Date","now","CheckboxItem","onOpenChange","open","handleAreaChange","checkedAreaIds","handleOk","handleReset","renderContent","_this$state2","docWidth","document","documentElement","clientWidth","width","Math","min","src_components_BtnCheckGroup","list_default","backgroundColor","date_picker_default","extra","date","arrow","checked","e","target","children","drawer_default","minHeight","clientHeight","enableDragHandle","contentStyle","color","textAlign","sidebar","position","List","join","isOver","locationLink","concat","href","locationIcon","limit","price","level","notice","PAGE_SIZE","MyBody","react","Home","lv","sideBarRef","openSideBar","current","actions","renderRow","rowData","sectionId","rowId","src_components_List","onEndReached","pageIndex","hasMore","dataSource","list_view_default","DataSource","rowHasChanged","row1","row2","offsetTop","dom","ReactDOM","findDOMNode","parentNode","allScenics","_this2","scenicsToShow","renderData","cloneWithRows","Home_SideBar_default","Home_Nav_default","pageSize","onEndReachedThreshold","renderBodyComponent","onScroll","renderFooter","activity_indicator_default","toast","animating","connect","ownProps","_state$homeStore","bindActionCreators","homeActions","Detail","handleLeftClick","history","onLeftClick","find","NUM_ROWS","genData","pIndex","dataBlob","ii","MySectionBodyWrapper","Demo","event","rData","_this3","el","useBodyScroll","renderHeader","renderSectionBodyWrapper","sectionID","DemoListView_MySectionBodyWrapper","RouteConfig","react_router_dom","react_router","path","exact","component","ListView","App","es","router_RouteConfig","Boolean","window","location","hostname","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2e978ac3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/yikatong-logo-sm.e302ab8c.png\";","module.exports = __webpack_public_path__ + \"static/media/location-icon.2c1ce28d.svg\";","import moment from 'moment';\n\nclass ScenicsFilter{\n    isDateOverLaps(startDate, endDate, source){\n        const format = 'YYYY.M.D';\n        const t1 = moment(source[0], format);\n        const t2 = moment(source[1], format);\n \n        if(t1.isSameOrBefore(endDate) && t2.isSameOrAfter(startDate)){\n            return true;\n        }else{\n            return false;\n        }\n    }\n\n    keywordFilter = (items, keyword) => {\n        return items.filter(item => { \n            return item.name.indexOf(keyword) > -1 || item.area.indexOf(keyword) > -1;\n        })\n    };\n\n    areaFilter = (items, areas) => {\n        if(!areas.length) return items;\n        \n        return items.filter((item)=>{\n            return areas.indexOf(item.area) > -1\n        })\n    };\n\n    momentFilter = (items, start, end) => {\n        if(!start && !end) return items;\n\n        return items.filter(item => {\n            let {periods = []} = item;\n            if(!periods.length) return true;\n\n            let match = false;\n            for(let period of periods){\n                if(this.isDateOverLaps(start, end, period)){\n                    match = true;\n                    break;\n                }\n            }\n            return match;\n        });\n    };\n\n    filterItems = (items, filters) => {\n        let newItems = items.slice();\n\n        if(filters.hideUnavailable){\n            newItems = newItems.filter(item => item.link);\n        }\n\n        if(filters.keyword){\n            newItems = this.keywordFilter(newItems, filters.keyword);\n        }\n        \n        if(filters.areas && filters.areas.length){\n            newItems = this.areaFilter(newItems, filters.areas);\n        }\n\n        if(filters.start && filters.end){\n            newItems = this.momentFilter(newItems, filters.start, filters.end);\n        }\n\n        return newItems;\n    };\n}\n\nexport default ScenicsFilter","import Server from './server';\n\nclass API extends Server {\n    async getAreas() {\n        try {\n            const result = await this.axios('get', `/json/areas.json`);\n            return result;\n        } catch (err) {\n            throw err;\n        }\n    }\n\n    async getScenics() {\n        try {\n            const result = await this.axios('get', `/json/scenics-2019.json`);\n            return result;\n        } catch (err) {\n            throw err;\n        }\n    }\n}\n\nexport default new API();","import axios from 'axios';\n/**\n * 主要params参数\n * @params method {string} 方法名\n * @params url {string} 请求地址  例如：/login 配合baseURL组成完整请求地址\n * @params baseURL {string} 请求地址统一前缀 ***需要提前指定***  例如：http://cangdu.org\n * @params timeout {number} 请求超时时间 默认 30000\n * @params params {object}  get方式传参key值\n * @params headers {string} 指定请求头信息\n * @params withCredentials {boolean} 请求是否携带本地cookies信息默认开启\n * @params validateStatus {func} 默认判断请求成功的范围 200 - 300\n * @return {Promise}\n * 其他更多拓展参看axios文档后 自行拓展\n * 注意：params中的数据会覆盖method url 参数，所以如果指定了这2个参数则不需要在params中带入\n*/\n\nexport default class Server {\n    axios(method, url, params) {\n        return new Promise((resolve, reject) => {\n            if (typeof params !== 'object') params = {};\n            let _option = params;\n            _option = {\n                method,\n                url,\n                baseURL: '/',\n                timeout: 30000,\n                params: null,\n                data: null,\n                headers: null,\n                withCredentials: true, //是否携带cookies发起请求\n                validateStatus: (status) => {\n                    return status >= 200 && status < 300;\n                },\n                ...params,\n            }\n            axios.request(_option).then(res => {\n                resolve(typeof res.data === 'object' ? res.data : JSON.parse(res.data))\n            }, error => {\n                if (error.response) {\n                    reject(error.response.data)\n                } else {\n                    reject(error)\n                }\n            })\n        })\n    }\n}\n\n\n","import * as Redux from 'redux';\nimport ScenicsFilter from '@/utils/ScenicsFilter';\nimport API from '@/api/api';\n\nimport Home from './type';\nimport {RootState} from '@/store/';\nimport Filters from '@/models/Filters';\nimport Scenic from '@/models/Scenic';\n\n// ===============================\n// Action Type\n// ===============================\nexport const HOME_SET_YIKATONG_SCENICS = 'HOME_SET_YIKATONG_SCENICS'\nexport const HOME_SET_YIKATONG_AREAS = 'HOME_SET_YIKATONG_AREAS'\nexport const HOME_SET_FILTERING_STATE = 'HOME_SET_FILTERING_STATE'\nexport const HOME_SET_FILTERED_SCENICS = 'HOME_SET_FILTERED_SCENICS'\n\n\n// ===============================\n// Action Creator\n// ===============================\nexport const fetchAreas = function(){\n    return async (dispatch: Redux.Dispatch, getState: () => RootState) => {\n        const {homeStore} = getState();\n        if(homeStore.areas.length) return homeStore.areas;\n\n        const areas = await API.getAreas();\n        dispatch({\n            type: HOME_SET_YIKATONG_AREAS,\n            payload: areas\n        })\n    }\n}\n\nexport const fetchScenics = function(){\n    return async (dispatch: Redux.Dispatch, getState: () => RootState) => {\n        const {scenics} = getState().homeStore;\n        if(scenics.length) return scenics;\n\n        let scenicsList = await API.getScenics();\n        scenicsList = scenicsList.map((scenic: Scenic, index: number) => {\n            scenic.id = index + 1 + '';\n            scenic.periods = [];\n            scenic.dates = scenic.dates || [];\n            const dates: Array<string> = scenic.dates;\n\n            let i = 0;\n            while(i < dates.length){\n                if(dates[i] && dates[i+1]){\n                    scenic.periods.push([dates[i], dates[i+1]]);\n                }\n                i += 2;\n            }\n            return scenic;\n        });\n\n        return dispatch({\n            type: HOME_SET_YIKATONG_SCENICS,\n            payload: scenicsList\n        })\n    }\n}\n\nexport const setLoading = (isLoading: boolean) => ({\n    type: HOME_SET_FILTERING_STATE,\n    payload: isLoading,\n})\n\n/**\n * Apply Filters on scenics\n * @param filters \n */\nexport const applyFilters = (filters: Filters) => (dispatch: Redux.Dispatch, getState: () => RootState) =>  {\n    const {\n        homeStore: {\n            scenics\n        }\n    } = getState();\n\n    dispatch(setLoading(true));\n\n    setTimeout(()=>{\n        // start filtering\n        const filterTool = new ScenicsFilter();\n        const filteredScenics: Array<Scenic> = filterTool.filterItems(scenics, filters)\n\n        dispatch({\n            type: HOME_SET_FILTERED_SCENICS,\n            payload: filteredScenics\n        })\n\n        dispatch(setLoading(false));\n    }, 1000)\n}\n\n/**\n * export all action creators\n */\nexport default {\n    fetchAreas,\n    fetchScenics,\n    setLoading,\n    applyFilters,\n}\n\n// ===============================\n// Action Handlers\n// ===============================\ntype Action = {type: string, payload: any};\nexport const ACTION_HANDLERS = {\n    [HOME_SET_YIKATONG_SCENICS]: (state: Home, {payload}: Action): Home => Object.assign({}, state, {scenics: payload}),\n    [HOME_SET_YIKATONG_AREAS]: (state: Home, {payload}: Action): Home => Object.assign({}, state, {areas: payload}),\n    [HOME_SET_FILTERED_SCENICS]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {filteredScenics: payload});\n    },\n    [HOME_SET_FILTERING_STATE]: (state: Home, {payload}: Action): Home => {\n        return Object.assign({}, state, {isLoading: payload});\n    }\n}","import genReducer from '@/utils/genReducer';\nimport Home from './type';\nimport {ACTION_HANDLERS} from './actions';\n\nconst initState: Home = {\n    title:'',\n    areas:[],\n    scenics:[],\n    filteredScenics:[],\n    isLoading: false,\n};\n\nexport default genReducer(initState, ACTION_HANDLERS)","export default function genReducer(initState, handlers){\n    return function reducer(state = initState, action){\n        const handler = handlers[action.type];\n        return handler ? handler(state, action) : state\n    }\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport homeStore from './home/reducer';\nimport Home from './home/type';\n\nconst loggerMiddleware = createLogger();\n\nexport const store = createStore(\n  combineReducers({homeStore}),\n  applyMiddleware(thunkMiddleware, loggerMiddleware)\n);\n\nexport interface RootState{\n    homeStore: Home\n};","import React from 'react';\nimport {Modal, SearchBar} from 'antd-mobile';\nimport './index.less';\n\ninterface Props{\n    keyword: string,\n    visible: boolean,\n    placeholder?: string,\n    onSearch: (keyword: string) => void,\n    onCancel: () => void,\n}\n\ninterface State{\n    keyword: string\n}\n\nclass SearchModal extends React.Component<Props, State>{\n    autoFocusInst: any;\n\n    constructor(props: Props){\n        super(props);\n\n        this.state = {\n            keyword: props.keyword,\n        };\n    }\n\n    componentDidMount() {\n        // this.autoFocusInst && this.autoFocusInst.focus();\n    }\n\n    componentWillReceiveProps(nextProps: Props){\n        if(nextProps.visible && !this.props.visible){\n            console.log('kk', this.autoFocusInst);\n            this.autoFocusInst && this.autoFocusInst.focus();\n        }\n\n        this.setState({\n            keyword: nextProps.keyword\n        });\n    }\n\n    handleSearch = (keyword: string) => {\n        this.setState({keyword});\n        this.props.onSearch(keyword);\n    }\n\n    render(){\n        const {visible, placeholder, onCancel} = this.props;\n        \n        return(\n            <Modal\n                className=\"search-modal\"\n                visible={visible}\n                transparent\n                maskClosable={false}\n                footer={[]}\n            >\n                <SearchBar \n                    placeholder={placeholder}\n                    defaultValue={this.props.keyword}\n                    ref={ref => ref && ref.focus()}\n                    showCancelButton={true}\n                    onSubmit={this.handleSearch}\n                    onCancel={onCancel}\n                />\n            </Modal>\n        )\n    }\n}\n\nexport default SearchModal;\n","import React from 'react';\nimport { Popover, Icon } from 'antd-mobile';\n\nconst Item = Popover.Item;\n\ninterface Props{\n    onSelect: (node: any) => void\n}\n\nconst Menu = function(props: Props){\n    return (\n        <Popover \n            // mask\n            // visible={this.state.visible}\n            overlay={[\n              (<Item key=\"2019-general\">2019版景区目录</Item>),\n              (<Item key=\"2020-general\">2020普通版景区目录</Item>),\n              (<Item key=\"2020-union\">2020联合卡景区目录</Item>)\n            ]}\n            align={{\n              overflow: { adjustY: 0, adjustX: 0 },\n            }}\n            // onVisibleChange={this.handleVisibleChange}\n            // onSelect={this.onSelect}\n          >\n            <div \n                style={{\n                    height: '100%',\n                    padding: '0 15px',\n                    marginRight: '-15px',\n                    display: 'flex',\n                    alignItems: 'center',\n                }}\n            >\n                <Icon type=\"ellipsis\" />\n            </div>\n        </Popover>\n    )\n}\n\nexport default Menu;\n","import React from 'react';\nimport { NavBar, Icon } from 'antd-mobile';\nimport SearchModal from '@/components/SearchModal';\nimport Menu from '../Menu';\nimport Logo from '@/assets/image/yikatong-logo-sm.png';\nimport \"./index.less\";\n\ninterface Props{\n    title: string,\n    onRightClick(): void,\n    onSearch(keyword: string): void,\n}\n\ninterface State{\n    searchVisible: boolean,\n    keyword: string\n}\n\nconst PlaceHolder = '请输入关键字搜索景区';\n\nexport default class extends React.Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n\n        this.state = {\n            searchVisible: false,\n            keyword: '',\n        };\n    }\n\n    handleSearch = (keyword: string) => {\n        this.props.onSearch(keyword);\n        this.setState({searchVisible: false, keyword});\n    }\n\n    handleCancel = () => {\n        this.setState({searchVisible: false});\n    }\n\n    handleSearchClick = () => {\n        this.setState({searchVisible: true});\n    }\n\n    handleMenuSelect = (node: any) => {\n        console.log('handleMenuSelect', node);\n    }\n\n    render(){\n        const {title, onRightClick} = this.props;\n        const {searchVisible, keyword} = this.state;\n\n        return(\n            <div\n                className=\"headerNav\"\n            >\n                <NavBar\n                    mode=\"light\"\n                    icon={<img className=\"brand\" src={Logo} alt=\"logo\" />}\n                    rightContent={\n                        <Menu \n                            onSelect={this.handleMenuSelect}\n                        />\n                    }\n                >{title}</NavBar>\n\n                <div className=\"search-bar\">\n                    <div className=\"input-container\" onClick={this.handleSearchClick}>\n                        <div className=\"input\">\n                            <Icon type=\"search\" />\n                            {keyword ? \n                                <span>{keyword}</span> : \n                                <span className=\"placeholder\">{PlaceHolder}</span>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"filter-trigger\" onClick={onRightClick}>\n                        <span>筛选</span>\n                        <span className=\"iconfont icon-filter\"></span>\n                    </div>\n                </div>\n\n                <SearchModal \n                    visible={searchVisible}\n                    keyword={keyword}\n                    onSearch={this.handleSearch}\n                    onCancel={this.handleCancel}\n                    placeholder={PlaceHolder}\n                />\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Button} from 'antd-mobile';\nimport './index.less';\n\ninterface Option{\n    code: string,\n    name: string\n}\n\ninterface Props{\n    options: Array<Option>,\n    checkedCodes: Array<string>,\n    onChange: (checkedCodes: Array<string>) => void\n}\n\nconst BtnCheckGroup = function(props: Props){\n    const {options, checkedCodes, onChange} = props;\n\n    const handleCheck = (code: string, check: boolean) => {\n        let nextCheckedCodes = checkedCodes.slice();\n        \n        if(check){\n            nextCheckedCodes.push(code);\n        }else{\n            nextCheckedCodes = nextCheckedCodes.filter(item => code !== item);\n        }\n\n        onChange(nextCheckedCodes);\n    };\n\n    return(\n        <div className=\"btn-check-group\">\n            <Button \n                inline\n                key={'nolimit'}\n                type={checkedCodes.length ? 'ghost':'primary'}\n                size=\"small\"\n                onClick={() => onChange([])}\n            >\n                不限\n            </Button>\n\n            {options.map((option: Option) => {\n                const {code, name} = option;\n                const isChecked = checkedCodes.includes(code);\n\n                return (\n                    <Button \n                        inline\n                        key={code}\n                        type={isChecked ? 'primary':'ghost'}\n                        size=\"small\"\n                        className={isChecked ? 'checked':''}\n                        onClick={() => {\n                            const isToCheck = isChecked ? false : true;\n                            handleCheck(code, isToCheck);\n                        }}\n                    >\n                        {name}\n                    </Button>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default BtnCheckGroup;\n","import React, { ReactNode } from 'react';\nimport { Drawer, Button, DatePicker, List, Checkbox } from 'antd-mobile';\nimport BtnCheckGroup from '@/components/BtnCheckGroup';\nimport Area from '@/models/Area';\nimport Filters from '@/models/Filters';\nimport \"./index.less\";\n\ninterface Props{\n    children: ReactNode,\n    title: string,\n    areas: Array<Area>,\n    ref: React.RefObject<any>,\n    applyFilters: (filters: Filters) => void\n}\ninterface State{\n    open: boolean,\n    checkedAreaIds: Array<string>,\n    startDate: Date | undefined,\n    endDate: Date | undefined,\n    hideUnavailable: boolean,\n}\n\nconst nowTimeStamp = Date.now();\nconst now = new Date(nowTimeStamp);\n// GMT is not currently observed in the UK. So use UTC now.\n// const utcNow = new Date(now.getTime() + (now.getTimezoneOffset() * 60000));\n\nconst {CheckboxItem} = Checkbox;\n\nexport default class extends React.Component<Props, State>{\n    constructor(props: Props){\n        super(props);\n        this.state = {\n            open: false,\n            checkedAreaIds: [],\n            startDate: now,\n            endDate: now,\n            hideUnavailable: false,\n        }\n    }\n\n    componentDidMount() {\n        \n    }\n\n    onOpenChange = () => {\n        this.setState({ open: !this.state.open });\n    }\n\n    handleAreaChange = (checkedAreaIds: Array<string>) => {\n        this.setState({checkedAreaIds});\n    }\n\n    handleOk = () => {\n        this.setState({\n            open: false\n        });\n\n        const {\n            checkedAreaIds, \n            startDate, \n            endDate,\n            hideUnavailable\n        } = this.state;\n        \n        this.props.applyFilters({\n            areas: checkedAreaIds,\n            start: startDate,\n            end: endDate,\n            hideUnavailable\n        });\n    }\n\n    handleReset = () => {\n        this.setState({\n            checkedAreaIds: [],\n            startDate: undefined,\n            endDate: undefined,\n        });\n    }\n\n    renderContent = () => {\n        const {areas}:Props = this.props;\n        const {checkedAreaIds, hideUnavailable} = this.state;\n        const docWidth = document.documentElement.clientWidth;\n        const width = Math.min(docWidth - 25, 500);\n\n        return (\n            <div className=\"sidebar-content\" style={{width}}>\n                <div className=\"filters\">\n                    <p className=\"sub-title\">选择区域</p>\n                    <div className=\"areas-list\">\n                        <BtnCheckGroup \n                            options={areas.map(area => ({code: area.name, name: area.name}))}\n                            checkedCodes={checkedAreaIds}\n                            onChange={this.handleAreaChange}\n                        />\n                    </div>\n\n                    <p className=\"sub-title\">时间范围</p>\n                    <div className=\"period\">\n                        <List className=\"date-picker-list\" style={{ backgroundColor: 'white' }}>\n                            <DatePicker\n                                mode=\"date\"\n                                title=\"开始日期\"\n                                extra=\"Optional\"\n                                value={this.state.startDate}\n                                onChange={date => this.setState({ startDate: date })}\n                            >\n                                <List.Item arrow=\"horizontal\">起始</List.Item>\n                            </DatePicker>\n\n                            <DatePicker\n                                mode=\"date\"\n                                title=\"结束日期\"\n                                extra=\"Optional\"\n                                value={this.state.endDate}\n                                onChange={date => this.setState({ endDate: date })}\n                            >\n                                <List.Item arrow=\"horizontal\">截止</List.Item>\n                            </DatePicker>\n                        </List>\n                    </div>\n\n                    <p className=\"sub-title\">其他</p>\n                    <div className=\"other\">\n\n                    <CheckboxItem \n                        checked={hideUnavailable} \n                        onChange={(e: any) => this.setState({hideUnavailable: e.target.checked})}\n                    >\n                        不显示接待结束的景区\n                    </CheckboxItem>\n                    </div>\n                </div>\n\n                <div className=\"btn-groups\">\n                    <Button \n                        inline \n                        style={{ marginRight: '16px' }}\n                        onClick={this.handleReset}\n                    >重置</Button>\n                    <Button \n                        type=\"primary\" \n                        inline\n                        onClick={this.handleOk}\n                    >确认</Button>\n                </div>\n            </div>\n        )\n    }\n\n    render(){\n        const {children}:Props = this.props;\n        return(\n            <Drawer\n                className=\"my-drawer\"\n                style={{ minHeight: document.documentElement.clientHeight }}\n                enableDragHandle\n                contentStyle={{ color: '#A6A6A6', textAlign: 'center' }}\n                sidebar={this.renderContent()}\n                open={this.state.open}\n                position={'right'}\n                onOpenChange={this.onOpenChange}\n            >\n                {children}\n            </Drawer>\n        )\n    }\n}","import React from 'react'\nimport {Link} from 'react-router-dom';\nimport locationIcon from './img/location-icon.svg'\nimport Scenic from '@/models/Scenic';\n\nimport './index.less'\n\ninterface ListProps{\n    children?: React.ElementType,\n}\n\nconst List = (props: ListProps) => {\n    return (\n        <div className=\"xui-list\">\n            {props.children}\n        </div>\n    )\n}\n\nList.Item = (props: Scenic) => {\n    \n    const period = 2 === props.dates.length ? props.dates.join(' - ') : '';\n    const isOver = !props.link;\n    const locationLink = 'https://www.amap.com/search?query=' + props.name;\n\n    return (\n        <div className={`xui-list-item ${isOver ? 'isover':''}`}>\n            <div className=\"item-meta\">\n                <span className=\"icon-id\">{props.id}</span>\n                <h4 className=\"meta-title\">\n                    {/* {props.link ? <Link to={`/scenic/${props.id}`}>{props.name}</Link> : props.name} */}\n                    {props.link ? <a href={props.link} target=\"_blank\" >{props.name}</a> : props.name}\n                </h4>\n                <span className=\"area\">{props.area || '新增景区'}</span>\n                <a href={locationLink} target=\"_blank\" className=\"location\">\n                    <img className=\"location-img\" src={locationIcon} alt=\"case1\" />\n                </a>\n            </div>\n            <div className=\"item-content\">\n                <div className=\"meta-line\">\n                    <div className=\"time\">时间段：{period}</div>\n                    <div className=\"limit\">{props.limit}</div>\n                </div>\n                <div className=\"meta-line\">\n                    <div className=\"price\">票价：{props.price}元</div>\n                    <div className=\"level\">A级：{props.level ? props.level : '无'}</div>\n                </div>\n\n                <p className=\"description\">\n                    特别说明: {props.notice}\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default List","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport { bindActionCreators, Dispatch } from 'redux';\nimport { connect } from 'react-redux';\nimport { ListView, ActivityIndicator } from 'antd-mobile';\nimport NavBar from \"./Nav\";\nimport SideBar from \"./SideBar\";\nimport List from \"@/components/List\";\nimport homeActions from \"@/store/home/actions\";\nimport Area from '@/models/Area';\nimport Scenic from '@/models/Scenic';\n// types\nimport {RootState} from '@/store';\nimport \"./index.less\";\n\nconst PAGE_SIZE = 10;\n\ntype Props = {\n    title: string;\n    areas: Array<Area>;\n    scenics: Array<Scenic>;\n    allScenics: Array<Scenic>;\n    actions: any;\n    isLoading: boolean;\n};\n\ntype State = {\n    scenics: Array<Scenic>,\n    dataSource: any;\n    keyword: string;\n    isLoading: boolean;\n    pageIndex: number;\n    height: number;\n};\n\nfunction MyBody(props:any) {\n    return (\n      <div className=\"am-list-body my-body\">\n        <span style={{ display: 'none' }}>you can custom body wrap element</span>\n        {props.children}\n      </div>\n    );\n}\n\nclass Home extends React.Component<Props, State> {\n    lv: React.RefObject<any>;\n    sideBarRef: React.RefObject<any>;\n\n    constructor(props: Props){\n        super(props);\n\n        this.sideBarRef = React.createRef();\n        this.lv = React.createRef();\n\n        const dataSource = new ListView.DataSource({\n            rowHasChanged: (row1:any, row2:any) => {\n                return row1 !== row2\n            },\n        });\n\n        this.state = {\n            scenics: props.scenics,\n            dataSource,\n            keyword: '',\n            isLoading: false,\n            pageIndex: 1,\n            height: 300,\n        };\n    }\n\n    async componentDidMount(){\n        const {actions} = this.props;\n        await actions.fetchScenics();\n        await actions.fetchAreas();\n\n        let offsetTop = 0;\n        let dom = this.lv ? ReactDOM.findDOMNode(this.lv.current) : null;\n        if(null !== dom){\n            offsetTop = dom.parentNode ? (dom.parentNode as HTMLBaseElement).offsetTop : 0;\n        }\n        const height = document.documentElement.clientHeight - offsetTop;\n        this.setState({height})\n    }\n\n    componentWillReceiveProps(nextProps: Props){\n        const {scenics, allScenics}: Props = nextProps;\n        \n        if(allScenics.length && !scenics.length){\n            this.props.actions.applyFilters({});\n        }\n\n        this.setState({scenics});\n    }\n\n    openSideBar = () => {\n        this.sideBarRef && this.sideBarRef.current.onOpenChange();\n    }\n\n    handleSearch = (value: string) => {\n        const {actions}: Props = this.props;\n        actions.applyFilters({keyword: value});\n    }\n\n    renderRow = (rowData: any, sectionId: any, rowId: any) => {\n        return (\n            <div key={rowId} className=\"area-item\">\n                <List.Item {...rowData} />\n            </div>\n        )\n    }\n\n    onEndReached = () => {\n        console.log('fire onEndReached');\n        const {isLoading, pageIndex, scenics} = this.state;\n        const hasMore = scenics.length > pageIndex * PAGE_SIZE;\n        if(isLoading || !hasMore) return;\n\n        setTimeout(() => {\n            this.setState({isLoading: false, pageIndex: pageIndex + 1})\n        }, 800);\n    }\n\n    render() {\n        const {scenics, dataSource, pageIndex, height} = this.state;\n        const {isLoading, actions} = this.props;\n\n        const scenicsToShow = pageIndex * PAGE_SIZE < scenics.length ? scenics.slice(0, pageIndex * PAGE_SIZE) : scenics;\n        const renderData = scenicsToShow.length ? dataSource.cloneWithRows(scenicsToShow) : dataSource;\n\n        return (\n            <div className=\"page-home\">\n                <SideBar \n                    title={'搜索'}\n                    ref={this.sideBarRef}\n                    areas={this.props.areas}\n                    applyFilters={actions.applyFilters}\n                >\n                    <NavBar\n                        title={'京津冀一卡通'}\n                        onRightClick={this.openSideBar}\n                        onSearch={this.handleSearch}\n                    />\n                    <div className=\"page-content\">\n                        <ListView \n                            ref={this.lv}\n                            style={{height, overflow:'auto'}}\n                            dataSource={renderData}\n                            renderRow={this.renderRow}\n                            className=\"am-list area-list xui-list\"\n                            pageSize={5}\n                            onEndReached={this.onEndReached}\n                            onEndReachedThreshold={20}\n                            renderBodyComponent={() => <MyBody />}\n                            // useBodyScroll\n                            onScroll={() => { console.log('scroll'); }}\n                            renderFooter={() => (\n                                <div style={{ padding: 30, textAlign: 'center' }}>\n                                    {this.state.isLoading ? 'Loading...' : 'Loaded'}\n                                </div>\n                            )}\n                        />\n                    </div>\n                </SideBar>\n                <ActivityIndicator\n                    toast\n                    animating={isLoading}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state: RootState, ownProps: Props) => {\n    const {areas, scenics, filteredScenics, isLoading} = state.homeStore;\n\n    return {\n        title: '',\n        areas,\n        scenics: filteredScenics,\n        allScenics: scenics,\n        isLoading\n    };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        actions: bindActionCreators(homeActions, dispatch)\n    };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\nimport {Icon} from 'antd-mobile';\nimport { connect } from 'react-redux';\nimport { NavBar } from 'antd-mobile';\n\nimport {match} from 'react-router';\nimport {History} from 'history';\nimport Scenic from '@/models/Scenic';\nimport {RootState} from '@/store';\n\nimport homeActions from \"@/store/home/actions\";\nimport './index.less';\n\ninterface OwnProps{\n    match: match;\n    history: History;\n}\n\ninterface Props extends OwnProps{\n    scenic: Scenic|null;\n}\n\ninterface State{\n    \n}\n\nclass Detail extends React.Component<Props, State>{\n    handleLeftClick = () => {\n        const {history} = this.props;\n        history.push('/');\n    }\n\n    render(){\n        const {scenic}: Props = this.props;\n        if(!scenic) return null;\n\n        return(\n            <div\n                className=\"detail-page\"\n            >\n                <NavBar\n                    mode=\"light\"\n                    icon={<Icon type=\"left\" />}\n                    onLeftClick={this.handleLeftClick}\n                >{scenic.name}</NavBar>\n                <div className=\"page-content\">\n                    <iframe \n                        src={scenic.link}\n                        title={scenic.name}\n                        width=\"100%\"\n                        height=\"100%\"\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: RootState, ownProps: OwnProps) => {\n    const {scenics} = state.homeStore;\n    const {params}: any = ownProps.match;\n\n    console.log('ownProps', ownProps);\n    \n    let scenic = null;\n    if(params.id && scenics.length){\n        scenic = scenics.find(item => params.id === item.id) || null;\n    }\n\n    return {\n        params,\n        scenic,\n    };\n}\n\nconst mapDispatchToProps = (dispatch: any) => {\n    dispatch(homeActions.fetchScenics());\n    \n    return {};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Detail);","/* eslint no-dupe-keys: 0 */\nimport React from 'react';\nimport {ListView} from 'antd-mobile';\n\nconst NUM_ROWS = 20;\nlet pageIndex = 0;\n\nfunction genData(pIndex = 0) {\n    const dataBlob = [];\n    for (let i = 0; i < NUM_ROWS; i++) {\n        const ii = (pIndex * NUM_ROWS) + i;\n        dataBlob.push(`row - ${ii}`);\n    }\n    return dataBlob;\n}\n\nconst MySectionBodyWrapper = (props) => {\n    return (<table className=\"my-section-body\">\n        <thead><tr><td>table title</td></tr></thead>\n        <tbody>{props.children}</tbody>\n    </table>);\n};\n\nclass Demo extends React.Component {\n    constructor(props) {\n        super(props);\n        const dataSource = new ListView.DataSource({\n            rowHasChanged: (row1, row2) => row1 !== row2,\n        });\n\n        this.state = {\n            dataSource,\n            isLoading: true,\n        };\n    }\n\n    componentDidMount() {\n        // simulate initial Ajax\n        setTimeout(() => {\n            this.rData = genData();\n            this.setState({\n                // dataSource: this.state.dataSource.cloneWithRows(this.rData),\n                isLoading: false,\n            });\n        }, 600);\n    }\n\n    onEndReached = (event) => {\n        console.log('fire onEndReached');\n        // load new data\n        // hasMore: from backend data, indicates whether it is the last page, here is false\n        if (this.state.isLoading && !this.state.hasMore) {\n            return;\n        }\n        console.log('reach end', event);\n        this.setState({ isLoading: true });\n        setTimeout(() => {\n            this.rData = this.rData.concat(genData(++pageIndex));\n            this.setState({\n                isLoading: false,\n            });\n        }, 1000);\n    }\n\n    render() {\n        const renderData = this.rData ? this.state.dataSource.cloneWithRows(this.rData) : this.state.dataSource;\n\n        return (<div>\n            <ListView\n                ref={el => this.lv = el}\n                dataSource={renderData}\n                useBodyScroll\n                renderHeader={() => <div style={{ padding: 30 }}>设置了`useBodyScroll`</div>}\n                renderFooter={() =>\n                    <div style={{ padding: 30 }}>{this.state.isLoading ? 'loading...' : 'loaded'}</div>}\n                renderBodyComponent={() => <div className=\"for-body-demo\" />}\n                renderSectionBodyWrapper={(sectionID) => <MySectionBodyWrapper key={sectionID} />}\n                renderRow={(rowData) => (<div style={{ height: 50 }}>\n                    <span>{rowData} Let me keep typing here so it wraps at least one line.</span>\n                </div>)}\n                onEndReached={this.onEndReached}\n                onEndReachedThreshold={10}\n                pageSize={10}\n            />\n        </div>);\n    }\n}\n\n\nexport default Demo;","import React from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Home from '@/pages/Home';\nimport Detail from '@/pages/Detail';\nimport ListView from '@/components/test/DemoListView';\n\nexport default class RouteConfig extends React.Component<{}, {}>{\n    render(){\n        return (\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/scenic/:id\" component={Detail} />\n                    <Route path=\"/test\" exact component={ListView} />\n                </Switch>\n            </BrowserRouter>\n        )\n    }\n}","import React from 'react';\nimport {Provider} from 'react-redux';\nimport {store} from '@/store/';\nimport Route from '@/router/';\n\nconst App: React.FC = () => {\n    return (\n        <Provider store={store}>\n            <Route />\n        </Provider>\n    );\n  }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}